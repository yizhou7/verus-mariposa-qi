include "nl_basics.dfy"

import opened nl_basics
lemma auto_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int)
{
	var temp_0_0 := ((((b0+d0)*(a0*a0))*((c0*a0)*(c0*a0)))*(((b0*c0)*(a0*d0))*((d0*a0)*(a0+b0))));
	var temp_0_1 := ((((b0+d0)*(a0*a0))*((c0*a0)*(c0*a0)))*(((b0*c0)*(a0*d0))*((a0+b0)*(d0*a0))));
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_1_0 := ((((a1*d1)-(b1-d1))*(((79 as int)*d1)*(c1*c1)))*(((b1+a1)*(d1*a1))*((a1*b1)*(c1*d1))));
	var temp_1_1 := ((((d1*a1)-(b1-d1))*(((79 as int)*d1)*(c1*c1)))*(((b1+a1)*(d1*a1))*((a1*b1)*(c1*d1))));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_2_0 := ((((a2-b2)*(b2*d2))*((b2*d2)*(a2*b2)))+(((d2*b2)+(d2*a2))*((d2*d2)*(b2*d2))));
	var temp_2_1 := ((((a2-b2)*(b2*d2))*((a2*b2)*(b2*d2)))+(((d2*b2)+(d2*a2))*((d2*d2)*(b2*d2))));
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_3_0 := ((((d3*b3)+(d3-c3))*((c3+b3)*(d3-c3)))*(((c3*(93 as int))-(d3*d3))*((a3*b3)*(d3*b3))));
	var temp_3_1 := ((((c3*(93 as int))-(d3*d3))*((a3*b3)*(d3*b3)))*(((d3*b3)+(d3-c3))*((c3+b3)*(d3-c3))));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_4_0 := ((((d4*(38 as int))+(a4*d4))*((c4+d4)-((47 as int)+a4)))*(((c4*(37 as int))*(a4*c4))*((d4*a4)*(b4*c4))));
	var temp_4_1 := ((((c4*(37 as int))*(a4*c4))*((d4*a4)*(b4*c4)))*(((d4*(38 as int))+(a4*d4))*((c4+d4)-((47 as int)+a4))));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_5_0 := (((c5*(b5*a5))*((a5*(25 as int))*(b5*a5)))*(((a5*c5)*((18 as int)*c5))*((b5*a5)+(d5*d5))));
	var temp_5_1 := (((c5*(b5*a5))*((a5*(25 as int))*(b5*a5)))*(((a5*c5)*(c5*(18 as int)))*((b5*a5)+(d5*d5))));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_6_0 := ((((a6*d6)*c6)+((b6*a6)*(a6*c6)))*(((c6*b6)*(a6-c6))+((d6*a6)*(a6*c6))));
	var temp_6_1 := ((((a6*d6)*c6)+((a6*b6)*(a6*c6)))*(((c6*b6)*(a6-c6))+((d6*a6)*(a6*c6))));
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_7_0 := ((((c7*b7)*(a7*d7))*((c7*c7)*(b7-b7)))*(((a7*a7)*(b7*a7))*((b7*c7)*c7)));
	var temp_7_1 := ((((c7*b7)*(a7*d7))*(c7*(c7*(b7-b7))))*(((a7*a7)*(b7*a7))*((b7*c7)*c7)));
	assert(temp_7_0 == temp_7_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_8_0 := ((((a8+a8)-(b8*b8))*((c8*a8)-(b8*b8)))+(((a8*a8)*(b8*b8))+((c8*d8)*(c8*a8))));
	var temp_8_1 := ((((a8+a8)-(b8*b8))*((c8*a8)-(b8*b8)))+(((a8*a8)*(b8*b8))+((d8*c8)*(c8*a8))));
	assert(temp_8_0 == temp_8_1) by 
			{lemma_mul_properties_auto_1();}// 1

}
