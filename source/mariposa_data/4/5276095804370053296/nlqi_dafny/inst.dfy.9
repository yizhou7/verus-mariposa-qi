include "nl_basics.dfy"

import opened nl_basics
lemma inst_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int)
{
	var temp_0_0 := ((((d0*c0)*(a0-d0))*((d0*d0)*(d0*a0)))+(((b0*d0)*c0)-((d0*d0)*(d0*b0))));
	var temp_0_1 := ((((d0*c0)*(a0-d0))*((d0*d0)*(d0*a0)))+((b0*(d0*c0))-((d0*d0)*(d0*b0))));
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_is_associative(b0, d0, c0);}// 1
	var temp_1_0 := ((((a1*b1)*(c1*a1))*(d1*(b1+c1)))*(d1*((d1+d1)-(a1*d1))));
	var temp_1_1 := ((d1*((d1+d1)-(a1*d1)))*(((a1*b1)*(c1*a1))*(d1*(b1+c1))));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_is_commutative((((a1*b1)*(c1*a1))*(d1*(b1+c1))), (d1*((d1+d1)-(a1*d1))));}// 1
	var temp_2_0 := (((b2*(b2*a2))-((b2*c2)*(a2-d2)))*(((c2*b2)*b2)-((d2*a2)*(b2*d2))));
	var temp_2_1 := (((b2*(b2*a2))-((a2-d2)*(b2*c2)))*(((c2*b2)*b2)-((d2*a2)*(b2*d2))));
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_is_commutative((b2*c2), (a2-d2));}// 1
	var temp_3_0 := ((((c3+b3)*(c3*a3))*((b3*c3)*(d3*d3)))*(((a3*a3)*(b3*(34 as int)))*((b3*b3)-(c3*a3))));
	var temp_3_1 := (((((c3+b3)*c3)*a3)*((b3*c3)*(d3*d3)))*(((a3*a3)*(b3*(34 as int)))*((b3*b3)-(c3*a3))));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_is_associative((c3+b3), c3, a3);}// 1
	var temp_4_0 := ((((a4*a4)*(d4*b4))-((a4*a4)+(a4*d4)))*(((c4*d4)*(d4*a4))-((b4-c4)*(b4*d4))));
	var temp_4_1 := ((((a4*a4)*(d4*b4))-((a4*a4)+(a4*d4)))*(((c4*d4)*(d4*a4))-((b4-c4)*(b4*d4))));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_is_commutative(a4, a4);}// 1
	var temp_5_0 := ((((a5*d5)*(a5*b5))*((d5-c5)*(d5*d5)))*(((a5*d5)*(c5+c5))+d5));
	var temp_5_1 := (((((a5*d5)*(a5*b5))*((d5-c5)*(d5*d5)))*((a5*d5)*(c5+c5)))+((((a5*d5)*(a5*b5))*((d5-c5)*(d5*d5)))*d5));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_is_distributive((((a5*d5)*(a5*b5))*((d5-c5)*(d5*d5))), ((a5*d5)*(c5+c5)), d5);}// 1
	var temp_6_0 := ((((c6*a6)*(d6*b6))-((c6*d6)*(a6*a6)))*(((b6*a6)*(a6*d6))*((b6*d6)*(a6*b6))));
	var temp_6_1 := (((c6*(a6*(d6*b6)))-((c6*d6)*(a6*a6)))*(((b6*a6)*(a6*d6))*((b6*d6)*(a6*b6))));
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_is_associative(c6, a6, (d6*b6));}// 1
	var temp_7_0 := (((c7*(b7*b7))+((d7*d7)*(a7*c7)))*(((a7*c7)*(c7*c7))-((a7*b7)*(a7*a7))));
	var temp_7_1 := (((c7*(b7*b7))+((d7*d7)*(a7*c7)))*(((a7*c7)*(c7*c7))-((a7*b7)*(a7*a7))));
	assert(temp_7_0 == temp_7_1) by 
			{lemma_mul_is_commutative(c7, c7);}// 1
	var temp_8_0 := (((d8-(c8*(72 as int)))*((a8*a8)*(c8*(83 as int))))-(((d8*c8)*(d8-d8))*d8));
	var temp_8_1 := (((d8-(c8*(72 as int)))*((a8*a8)*((83 as int)*c8)))-(((d8*c8)*(d8-d8))*d8));
	assert(temp_8_0 == temp_8_1) by 
			{lemma_mul_is_commutative(c8, (83 as int));}// 1

}
