use builtin_macros::*;
use builtin::*;
mod nl_basics;
use crate::nl_basics::*;
verus! {

pub proof fn inst_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int,
a10: int, b10: int, c10: int, d10: int,
a11: int, b11: int, c11: int, d11: int,
a12: int, b12: int, c12: int, d12: int,
a13: int, b13: int, c13: int, d13: int,
a14: int, b14: int, c14: int, d14: int,
a15: int, b15: int, c15: int, d15: int,
a16: int, b16: int, c16: int, d16: int,
a17: int, b17: int, c17: int, d17: int,
a18: int, b18: int, c18: int, d18: int,
a19: int, b19: int, c19: int, d19: int,
a20: int, b20: int, c20: int, d20: int,
a21: int, b21: int, c21: int, d21: int,
a22: int, b22: int, c22: int, d22: int,
a23: int, b23: int, c23: int, d23: int,
a24: int, b24: int, c24: int, d24: int,
a25: int, b25: int, c25: int, d25: int,
a26: int, b26: int, c26: int, d26: int,
a27: int, b27: int, c27: int, d27: int,
a28: int, b28: int, c28: int, d28: int,
a29: int, b29: int, c29: int, d29: int,
a30: int, b30: int, c30: int, d30: int,
a31: int, b31: int, c31: int, d31: int,
a32: int, b32: int, c32: int, d32: int,
a33: int, b33: int, c33: int, d33: int,
a34: int, b34: int, c34: int, d34: int,
a35: int, b35: int, c35: int, d35: int,
a36: int, b36: int, c36: int, d36: int,
a37: int, b37: int, c37: int, d37: int,
a38: int, b38: int, c38: int, d38: int,
a39: int, b39: int, c39: int, d39: int,
a40: int, b40: int, c40: int, d40: int,
a41: int, b41: int, c41: int, d41: int,
a42: int, b42: int, c42: int, d42: int,
a43: int, b43: int, c43: int, d43: int,
a44: int, b44: int, c44: int, d44: int,
a45: int, b45: int, c45: int, d45: int,
a46: int, b46: int, c46: int, d46: int,
a47: int, b47: int, c47: int, d47: int,
a48: int, b48: int, c48: int, d48: int,
a49: int, b49: int, c49: int, d49: int,
a50: int, b50: int, c50: int, d50: int,
a51: int, b51: int, c51: int, d51: int,
a52: int, b52: int, c52: int, d52: int,
a53: int, b53: int, c53: int, d53: int,
a54: int, b54: int, c54: int, d54: int,
a55: int, b55: int, c55: int, d55: int,
a56: int, b56: int, c56: int, d56: int,
a57: int, b57: int, c57: int, d57: int,
a58: int, b58: int, c58: int, d58: int,
a59: int, b59: int, c59: int, d59: int)
{
	let temp_0_0 = (((((((b0*(d0*d0))*((d0*d0)*(b0*c0)))*(a0*((b0-c0)*(c0+c0))))*((((a0*b0)*(b0+d0))+((a0*a0)-(d0*b0)))*(((d0*b0)*(c0+a0))*((c0*c0)*(d0*c0)))))*(b0*((((c0+d0)-(a0*c0))*((b0*d0)*(d0*b0)))*(((b0*c0)*(b0*c0))*((d0*d0)*(d0*a0))))))+((((((a0+d0)*(a0*a0))*(a0*b0))*(((a0*d0)*(d0*d0))*((b0+a0)*(19 as int))))*(a0+(b0*((a0*b0)*d0))))*((47 as int)+b0)))*(((d0*((((d0*d0)*(c0*b0))*((c0-c0)*(b0*c0)))*(((b0*a0)*(d0-d0))+a0)))*(((d0*((b0*c0)+(b0*a0)))*(a0*((c0*c0)*b0)))*((((b0*b0)*(b0*d0))*((32 as int)+b0))-((a0+(d0*a0))*d0))))*((((((b0+b0)*(c0+c0))+b0)*(((b0*b0)*(c0*c0))*((c0-c0)+c0)))*((((b0*(72 as int))*(d0+d0))*((c0*c0)*(d0*a0)))*(((d0-d0)*(a0*d0))*((b0*d0)*(b0*a0)))))*((((d0*(c0+d0))*((d0*d0)*(a0*d0)))*(((d0*a0)*(a0*d0))*a0))*((((d0*d0)*(b0*a0))*((a0-a0)*(d0*b0)))*(((b0-d0)*(b0+c0))+((d0+b0)-(b0+b0))))))));
	let temp_0_1 = (((((((b0*(d0*d0))*((d0*d0)*(b0*c0)))*(a0*((b0-c0)*(c0+c0))))*((((a0*b0)*(b0+d0))+((a0*a0)-(d0*b0)))*(((d0*b0)*(c0+a0))*((c0*c0)*(d0*c0)))))*(b0*((((c0+d0)-(a0*c0))*(b0*(d0*(d0*b0))))*(((b0*c0)*(b0*c0))*((d0*d0)*(d0*a0))))))+((((((a0+d0)*(a0*a0))*(a0*b0))*(((a0*d0)*(d0*d0))*((b0+a0)*(19 as int))))*(a0+(b0*((a0*b0)*d0))))*((47 as int)+b0)))*(((d0*((((d0*d0)*(c0*b0))*((c0-c0)*(b0*c0)))*(((b0*a0)*(d0-d0))+a0)))*(((d0*((b0*c0)+(b0*a0)))*(a0*((c0*c0)*b0)))*((((b0*b0)*(b0*d0))*((32 as int)+b0))-((a0+(d0*a0))*d0))))*((((((b0+b0)*(c0+c0))+b0)*(((b0*b0)*(c0*c0))*((c0-c0)+c0)))*((((b0*(72 as int))*(d0+d0))*((c0*c0)*(d0*a0)))*(((d0-d0)*(a0*d0))*((b0*d0)*(b0*a0)))))*((((d0*(c0+d0))*((d0*d0)*(a0*d0)))*(((d0*a0)*(a0*d0))*a0))*((((d0*d0)*(b0*a0))*((a0-a0)*(d0*b0)))*(((b0-d0)*(b0+c0))+((d0+b0)-(b0+b0))))))));
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_is_associative(b0, d0, (d0*b0));}// 1
	let temp_1_0 = (((((((a1*(c1*d1))*d1)*a1)*((((c1*d1)*(a1*b1))+((a1-b1)*(b1*a1)))*(((c1*a1)*(d1*c1))+((56 as int)*c1))))*(c1*((((c1-c1)*(b1*a1))*((a1*a1)*(d1*d1)))+(((d1-c1)*(b1*b1))+((b1+b1)*a1)))))-((((((c1*d1)*(d1-a1))*((b1*b1)*(a1*d1)))*(((c1*a1)*(b1*c1))*((b1*d1)+c1)))*(c1*((a1*(a1*c1))+((d1-d1)*(c1+d1)))))*(((((b1*c1)*(a1*b1))+(c1*(a1*a1)))*(((a1*c1)-(c1*c1))*(b1*(b1*b1))))*((b1+(((62 as int)*b1)*(a1*b1)))-(((d1*c1)*(a1*b1))*((a1*a1)+(c1*b1)))))))*(((c1*((((a1*c1)*d1)*(c1*a1))*(((b1*a1)*(b1*c1))*((b1*a1)*(d1*d1)))))*(((((a1*c1)*(c1*d1))*((d1*(99 as int))*(b1*c1)))*(((d1*c1)*(b1*d1))*((d1*b1)*(c1+(57 as int)))))-((((c1*a1)*(c1*a1))*((b1*b1)*(a1*a1)))*(b1-((d1*c1)+(b1*c1))))))+(((c1*(((c1*c1)*(a1*c1))+((a1*c1)*(b1*b1))))*(d1*((a1*(c1*c1))*(d1*(d1*a1)))))*(a1-((((b1-b1)*(a1*b1))*((b1*d1)*(a1*a1)))-(((b1-a1)*(c1*b1))*c1))))));
	let temp_1_1 = (((((((a1*(c1*d1))*d1)*a1)*((((c1*d1)*(a1*b1))+((a1-b1)*(b1*a1)))*(((c1*a1)*(d1*c1))+((56 as int)*c1))))*(c1*((((c1-c1)*(b1*a1))*((a1*a1)*(d1*d1)))+(((d1-c1)*(b1*b1))+((b1+b1)*a1)))))-((((((c1*d1)*(d1-a1))*((b1*b1)*(a1*d1)))*(((c1*a1)*(b1*c1))*((b1*d1)+c1)))*(c1*((a1*(a1*c1))+((d1-d1)*(c1+d1)))))*(((((b1*c1)*(a1*b1))+(c1*(a1*a1)))*((((a1*c1)-(c1*c1))*b1)*(b1*b1)))*((b1+(((62 as int)*b1)*(a1*b1)))-(((d1*c1)*(a1*b1))*((a1*a1)+(c1*b1)))))))*(((c1*((((a1*c1)*d1)*(c1*a1))*(((b1*a1)*(b1*c1))*((b1*a1)*(d1*d1)))))*(((((a1*c1)*(c1*d1))*((d1*(99 as int))*(b1*c1)))*(((d1*c1)*(b1*d1))*((d1*b1)*(c1+(57 as int)))))-((((c1*a1)*(c1*a1))*((b1*b1)*(a1*a1)))*(b1-((d1*c1)+(b1*c1))))))+(((c1*(((c1*c1)*(a1*c1))+((a1*c1)*(b1*b1))))*(d1*((a1*(c1*c1))*(d1*(d1*a1)))))*(a1-((((b1-b1)*(a1*b1))*((b1*d1)*(a1*a1)))-(((b1-a1)*(c1*b1))*c1))))));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_is_associative(((a1*c1)-(c1*c1)), b1, (b1*b1));}// 1
	let temp_2_0 = (((((((c2*(a2+a2))*((b2*a2)+(c2*c2)))*(((b2*(96 as int))*(a2*d2))*((b2*d2)*(c2*b2))))*((((a2+c2)*(d2*b2))*a2)*(((b2*d2)*(d2*a2))*((c2*b2)*(c2*d2)))))*(((((c2*d2)*(b2*a2))*(((4 as int)*c2)*(d2*d2)))*(((c2*d2)*((91 as int)+c2))*c2))*(((d2-(c2*c2))*((d2*c2)*(d2-a2)))-(((d2*a2)*(c2*a2))*(d2*a2)))))*((((((c2+c2)*(b2-c2))*((a2*a2)-(d2+b2)))*(b2*((b2*c2)-(b2*a2))))-((((d2*d2)+a2)*((b2*b2)*(b2-c2)))-(((36 as int)*(d2+a2))*((b2*a2)*(b2+a2)))))*(((c2*((a2*b2)*(d2+c2)))*b2)+((a2+((d2*c2)-(a2+b2)))-(((a2*a2)*(a2*c2))*((c2*d2)*(d2-b2)))))))*(((((((c2+c2)*(c2*c2))+(d2*(c2*(75 as int))))*(d2*((c2*b2)*c2)))*((d2+((a2*c2)+d2))*(((b2+c2)*b2)*((c2*c2)*(b2+b2)))))*(((((a2-c2)*(a2*b2))-((d2*a2)*(d2*c2)))-(((d2+a2)+(b2*a2))*((d2*c2)+(c2*a2))))*(a2*(((b2*c2)*(a2-a2))-((a2-a2)*(b2*a2))))))*((((a2*(c2+(d2*a2)))*(d2*((b2*d2)*(c2*d2))))*((((a2*b2)+(b2*a2))*((a2*d2)*c2))*b2))*(((b2+((c2*a2)-(a2*b2)))*(((d2*d2)*(d2-b2))*((58 as int)*(a2*a2))))*((a2-((a2+a2)*(c2*a2)))*c2)))));
	let temp_2_1 = (((((((c2*(a2+a2))*((b2*a2)+(c2*c2)))*(((b2*(96 as int))*(a2*d2))*((b2*d2)*(c2*b2))))*((((a2+c2)*(d2*b2))*a2)*(((b2*d2)*(d2*a2))*((c2*b2)*(c2*d2)))))*(((((c2*d2)*(b2*a2))*(((4 as int)*c2)*(d2*d2)))*(((c2*d2)*((91 as int)+c2))*c2))*(((d2-(c2*c2))*((d2*c2)*(d2-a2)))-(((d2*a2)*(c2*a2))*(d2*a2)))))*((((b2*((b2*c2)-(b2*a2)))*(((c2+c2)*(b2-c2))*((a2*a2)-(d2+b2))))-((((d2*d2)+a2)*((b2*b2)*(b2-c2)))-(((36 as int)*(d2+a2))*((b2*a2)*(b2+a2)))))*(((c2*((a2*b2)*(d2+c2)))*b2)+((a2+((d2*c2)-(a2+b2)))-(((a2*a2)*(a2*c2))*((c2*d2)*(d2-b2)))))))*(((((((c2+c2)*(c2*c2))+(d2*(c2*(75 as int))))*(d2*((c2*b2)*c2)))*((d2+((a2*c2)+d2))*(((b2+c2)*b2)*((c2*c2)*(b2+b2)))))*(((((a2-c2)*(a2*b2))-((d2*a2)*(d2*c2)))-(((d2+a2)+(b2*a2))*((d2*c2)+(c2*a2))))*(a2*(((b2*c2)*(a2-a2))-((a2-a2)*(b2*a2))))))*((((a2*(c2+(d2*a2)))*(d2*((b2*d2)*(c2*d2))))*((((a2*b2)+(b2*a2))*((a2*d2)*c2))*b2))*(((b2+((c2*a2)-(a2*b2)))*(((d2*d2)*(d2-b2))*((58 as int)*(a2*a2))))*((a2-((a2+a2)*(c2*a2)))*c2)))));
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_is_commutative((((c2+c2)*(b2-c2))*((a2*a2)-(d2+b2))), (b2*((b2*c2)-(b2*a2))));}// 1
	let temp_3_0 = ((((((((d3+b3)*(c3*d3))*((d3+b3)-d3))*(((d3-b3)*a3)*d3))*((((b3*b3)*(b3+c3))*((d3*c3)+(b3*d3)))*(((d3*a3)*((82 as int)*b3))-(c3*(a3-c3)))))*(((((d3-c3)*(b3*c3))*((c3*d3)*((74 as int)*b3)))*(((c3*c3)*d3)*(((81 as int)*d3)*(c3-a3))))*((((b3*b3)*(a3*b3))*((b3*d3)*(b3*a3)))*c3)))*((((((d3-c3)*b3)*((d3*b3)*(b3*c3)))*(((b3*b3)*(a3*b3))+((c3*c3)*(a3-a3))))*((((b3*a3)*(b3*b3))*((d3*b3)*(c3*b3)))*(((b3*b3)+(b3*d3))*((c3*b3)*(a3*c3)))))*(((((a3*b3)*(a3*d3))*((c3*b3)*(d3*b3)))*((83 as int)*((d3*c3)*(a3*d3))))-((((b3*b3)*(b3*d3))*b3)*d3))))+((b3*(((((a3-b3)-(b3*b3))*((a3*b3)*(a3*a3)))*(((b3+d3)*a3)*((a3*b3)*(c3*a3))))*(d3+d3)))*((b3*(c3*(((c3*d3)*(d3+b3))*(c3*(b3*a3)))))+(((((c3*d3)*d3)-a3)*(c3*c3))*((53 as int)*(((b3*a3)-(b3*c3))+((b3*c3)*(c3+c3))))))));
	let temp_3_1 = ((((((((d3+b3)*(c3*d3))*((d3+b3)-d3))*(((d3-b3)*a3)*d3))*((((b3*b3)*(b3+c3))*((d3*c3)+(b3*d3)))*(((d3*a3)*((82 as int)*b3))-(c3*(a3-c3)))))*(((((b3*c3)*(d3-c3))*((c3*d3)*((74 as int)*b3)))*(((c3*c3)*d3)*(((81 as int)*d3)*(c3-a3))))*((((b3*b3)*(a3*b3))*((b3*d3)*(b3*a3)))*c3)))*((((((d3-c3)*b3)*((d3*b3)*(b3*c3)))*(((b3*b3)*(a3*b3))+((c3*c3)*(a3-a3))))*((((b3*a3)*(b3*b3))*((d3*b3)*(c3*b3)))*(((b3*b3)+(b3*d3))*((c3*b3)*(a3*c3)))))*(((((a3*b3)*(a3*d3))*((c3*b3)*(d3*b3)))*((83 as int)*((d3*c3)*(a3*d3))))-((((b3*b3)*(b3*d3))*b3)*d3))))+((b3*(((((a3-b3)-(b3*b3))*((a3*b3)*(a3*a3)))*(((b3+d3)*a3)*((a3*b3)*(c3*a3))))*(d3+d3)))*((b3*(c3*(((c3*d3)*(d3+b3))*(c3*(b3*a3)))))+(((((c3*d3)*d3)-a3)*(c3*c3))*((53 as int)*(((b3*a3)-(b3*c3))+((b3*c3)*(c3+c3))))))));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_is_commutative((d3-c3), (b3*c3));}// 1
	let temp_4_0 = ((((((((b4*d4)+(c4*d4))*a4)*(((d4*c4)*(c4*b4))*((b4*c4)*a4)))*((((d4*b4)*(d4*b4))*((d4*b4)*(c4+d4)))*(((c4*b4)*(b4-c4))*((d4+c4)*(a4*a4)))))*d4)*((((((d4*d4)*(d4-a4))*((b4*c4)*(a4*d4)))*(((d4*c4)*b4)+((b4*b4)+(a4*c4))))*(((d4*(a4+c4))*(a4*(a4-b4)))*(((b4*c4)*(c4*a4))-((a4*b4)*c4))))-a4))*(((((((b4*c4)*(b4*d4))-a4)*(((a4*d4)-(b4*a4))*((d4*c4)*b4)))-((((c4*c4)*(b4*a4))+(c4*a4))*(((d4*b4)-(a4*c4))*((b4+c4)*(d4*c4)))))*((((d4-(b4*a4))*(a4*(a4*a4)))*(((b4*d4)*(c4*d4))*((b4*a4)*(c4*b4))))*((((d4+c4)*(d4*b4))*((b4-c4)*b4))*(((a4*b4)*(b4*a4))*((c4*b4)*(b4*d4))))))*(((((a4*(c4*c4))*((b4*c4)*(b4*d4)))*(((b4*b4)*(c4*a4))*((c4-c4)*(a4*d4))))*(d4*(((d4+d4)*(b4*c4))*((c4*b4)*(c4*c4)))))*((((d4-a4)+((a4*d4)*(a4*a4)))*(((a4*b4)*(c4*d4))+d4))*(((c4*(d4*d4))*((c4-(66 as int))*(c4*a4)))*b4)))));
	let temp_4_1 = ((((((((b4*d4)+(c4*d4))*a4)*(((d4*c4)*(c4*b4))*((b4*c4)*a4)))*((((d4*b4)*(d4*b4))*((d4*b4)*(c4+d4)))*(((c4*b4)*(b4-c4))*((d4+c4)*(a4*a4)))))*d4)*((((((d4*d4)*(d4-a4))*((b4*c4)*(a4*d4)))*(((d4*c4)*b4)+((b4*b4)+(a4*c4))))*(((d4*(a4+c4))*(a4*(a4-b4)))*(((b4*c4)*(c4*a4))-((a4*b4)*c4))))-a4))*(((((((b4*c4)*(b4*d4))-a4)*(((a4*d4)-(b4*a4))*((d4*c4)*b4)))-((((c4*c4)*(b4*a4))+(c4*a4))*(((d4*b4)-(a4*c4))*((b4+c4)*(d4*c4)))))*((((d4-(b4*a4))*(a4*(a4*a4)))*(((b4*d4)*(c4*d4))*((b4*a4)*(c4*b4))))*((((d4+c4)*(d4*b4))*((b4-c4)*b4))*(((a4*b4)*(b4*a4))*((c4*b4)*(b4*d4))))))*(((((a4*(c4*c4))*((b4*c4)*(b4*d4)))*(((b4*b4)*(c4*a4))*((c4-c4)*(a4*d4))))*(d4*(((d4+d4)*(b4*c4))*((c4*b4)*(c4*c4)))))*(((((d4-a4)+((a4*d4)*(a4*a4)))*(((a4*b4)*(c4*d4))+d4))*((c4*(d4*d4))*((c4-(66 as int))*(c4*a4))))*b4))));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_is_associative((((d4-a4)+((a4*d4)*(a4*a4)))*(((a4*b4)*(c4*d4))+d4)), ((c4*(d4*d4))*((c4-(66 as int))*(c4*a4))), b4);}// 1
	let temp_5_0 = (((b5*((c5*(((c5*d5)*(a5*d5))-((c5*d5)*(c5*(87 as int)))))*((((b5*c5)*a5)*((b5*c5)-(d5*a5)))*(((b5*b5)*(d5*d5))*((d5*c5)*d5)))))*d5)*((((d5*(((d5*c5)+(c5*b5))+((d5*d5)*c5)))*(((d5+c5)+((d5*d5)-c5))*((c5*(b5*c5))*((d5*d5)+(d5*c5)))))-(((((a5*c5)*(d5+d5))*((a5*b5)*(d5*c5)))-((a5*(a5+b5))*((d5*c5)*(b5*d5))))*((((c5*c5)*(a5*d5))*((d5*c5)*(a5*d5)))*(a5-((a5*d5)*(c5*c5))))))*((((((c5*a5)*(d5*d5))*((d5*a5)+(c5*a5)))+(((c5*d5)-d5)*a5))*b5)*(((((b5*a5)-d5)*((a5*a5)*(b5*d5)))*(a5*((a5+b5)-(a5-d5))))*((((d5*b5)+d5)+(d5*c5))*(((c5*(72 as int))*a5)+((a5+b5)-(c5*d5))))))));
	let temp_5_1 = (((b5*((c5*(((c5*d5)*(a5*d5))-((c5*d5)*(c5*(87 as int)))))*((((b5*c5)*a5)*((b5*c5)-(d5*a5)))*(((b5*b5)*(d5*d5))*((d5*c5)*d5)))))*d5)*((((d5*(((d5*c5)+(c5*b5))+((d5*d5)*c5)))*(((d5+c5)+((d5*d5)-c5))*((c5*(b5*c5))*((d5*d5)+(d5*c5)))))*((((((c5*a5)*(d5*d5))*((d5*a5)+(c5*a5)))+(((c5*d5)-d5)*a5))*b5)*(((((b5*a5)-d5)*((a5*a5)*(b5*d5)))*(a5*((a5+b5)-(a5-d5))))*((((d5*b5)+d5)+(d5*c5))*(((c5*(72 as int))*a5)+((a5+b5)-(c5*d5)))))))-((((((a5*c5)*(d5+d5))*((a5*b5)*(d5*c5)))-((a5*(a5+b5))*((d5*c5)*(b5*d5))))*((((c5*c5)*(a5*d5))*((d5*c5)*(a5*d5)))*(a5-((a5*d5)*(c5*c5)))))*((((((c5*a5)*(d5*d5))*((d5*a5)+(c5*a5)))+(((c5*d5)-d5)*a5))*b5)*(((((b5*a5)-d5)*((a5*a5)*(b5*d5)))*(a5*((a5+b5)-(a5-d5))))*((((d5*b5)+d5)+(d5*c5))*(((c5*(72 as int))*a5)+((a5+b5)-(c5*d5)))))))));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_is_distributive(((d5*(((d5*c5)+(c5*b5))+((d5*d5)*c5)))*(((d5+c5)+((d5*d5)-c5))*((c5*(b5*c5))*((d5*d5)+(d5*c5))))), (((((a5*c5)*(d5+d5))*((a5*b5)*(d5*c5)))-((a5*(a5+b5))*((d5*c5)*(b5*d5))))*((((c5*c5)*(a5*d5))*((d5*c5)*(a5*d5)))*(a5-((a5*d5)*(c5*c5))))), ((((((c5*a5)*(d5*d5))*((d5*a5)+(c5*a5)))+(((c5*d5)-d5)*a5))*b5)*(((((b5*a5)-d5)*((a5*a5)*(b5*d5)))*(a5*((a5+b5)-(a5-d5))))*((((d5*b5)+d5)+(d5*c5))*(((c5*(72 as int))*a5)+((a5+b5)-(c5*d5)))))));}// 1
	let temp_6_0 = ((d6+((((((b6*b6)*(c6*d6))*((d6*a6)*c6))-((d6-(a6*a6))*((d6-b6)*(d6+d6))))+((((a6*d6)-(c6*c6))*c6)*(((41 as int)*c6)+((d6*b6)*(c6*d6)))))*d6))*((((((a6*(c6*d6))*((d6*c6)*(c6*c6)))*(((a6*d6)*(c6*a6))*((b6*a6)+(a6*d6))))*((((b6+b6)*(c6*c6))*((d6*a6)*(d6*(70 as int))))*(((d6*d6)*(d6*d6))*a6)))*(((((b6*a6)*(b6*c6))*((a6*a6)*c6))-c6)*(((d6-d6)*((c6-(87 as int))*(d6*b6)))+(((a6*c6)*(c6*b6))+((b6*d6)*(57 as int))))))*(a6*(((((a6*c6)+(c6*c6))*((d6*d6)-(b6*d6)))*(((d6*a6)*(d6*c6))*((c6*c6)*(c6*d6))))*a6))));
	let temp_6_1 = ((d6+((((((c6*d6)*(b6*b6))*((d6*a6)*c6))-((d6-(a6*a6))*((d6-b6)*(d6+d6))))+((((a6*d6)-(c6*c6))*c6)*(((41 as int)*c6)+((d6*b6)*(c6*d6)))))*d6))*((((((a6*(c6*d6))*((d6*c6)*(c6*c6)))*(((a6*d6)*(c6*a6))*((b6*a6)+(a6*d6))))*((((b6+b6)*(c6*c6))*((d6*a6)*(d6*(70 as int))))*(((d6*d6)*(d6*d6))*a6)))*(((((b6*a6)*(b6*c6))*((a6*a6)*c6))-c6)*(((d6-d6)*((c6-(87 as int))*(d6*b6)))+(((a6*c6)*(c6*b6))+((b6*d6)*(57 as int))))))*(a6*(((((a6*c6)+(c6*c6))*((d6*d6)-(b6*d6)))*(((d6*a6)*(d6*c6))*((c6*c6)*(c6*d6))))*a6))));
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_is_commutative((b6*b6), (c6*d6));}// 1
	let temp_7_0 = ((d7*((((((a7-d7)*b7)*((a7*a7)*a7))*c7)*((((b7*a7)*(a7-d7))*(d7*(d7*d7)))*((d7*(d7*a7))*((a7*c7)*(d7*a7)))))+a7))*((92 as int)*((((((b7*b7)*(b7*b7))*((a7+b7)*(19 as int)))-(((b7+c7)*b7)+(d7*(b7+b7))))+(b7*(((c7*c7)+(d7*d7))*((d7*c7)*c7))))*(d7*((((a7+c7)*d7)*c7)*((b7*a7)*((b7*d7)+(d7*(6 as int)))))))));
	let temp_7_1 = (d7*(((((((a7-d7)*b7)*((a7*a7)*a7))*c7)*((((b7*a7)*(a7-d7))*(d7*(d7*d7)))*((d7*(d7*a7))*((a7*c7)*(d7*a7)))))+a7)*((92 as int)*((((((b7*b7)*(b7*b7))*((a7+b7)*(19 as int)))-(((b7+c7)*b7)+(d7*(b7+b7))))+(b7*(((c7*c7)+(d7*d7))*((d7*c7)*c7))))*(d7*((((a7+c7)*d7)*c7)*((b7*a7)*((b7*d7)+(d7*(6 as int))))))))));
	assert(temp_7_0 == temp_7_1) by 
			{lemma_mul_is_associative(d7, ((((((a7-d7)*b7)*((a7*a7)*a7))*c7)*((((b7*a7)*(a7-d7))*(d7*(d7*d7)))*((d7*(d7*a7))*((a7*c7)*(d7*a7)))))+a7), ((92 as int)*((((((b7*b7)*(b7*b7))*((a7+b7)*(19 as int)))-(((b7+c7)*b7)+(d7*(b7+b7))))+(b7*(((c7*c7)+(d7*d7))*((d7*c7)*c7))))*(d7*((((a7+c7)*d7)*c7)*((b7*a7)*((b7*d7)+(d7*(6 as int)))))))));}// 1
	let temp_8_0 = ((((((((d8*c8)+a8)*((d8-c8)*c8))*(((d8-c8)*(a8+b8))*((c8*b8)*(a8*(26 as int)))))*((((c8*a8)*c8)*((b8+d8)-(c8*c8)))*c8))*(c8*((((d8*c8)*(a8*c8))*(c8*(a8*d8)))*(((b8*b8)*(a8*b8))*((c8*a8)+(a8*a8))))))*((((((a8-d8)*(b8*d8))*(a8*(d8+d8)))*(((a8*c8)+(b8*a8))*(((84 as int)*b8)*(b8*c8))))-((((d8*d8)*a8)+((c8*b8)+(b8*d8)))*(((d8-c8)*(c8*b8))-(a8*(d8*b8)))))*(b8*((((c8*d8)+(c8*d8))+((d8*b8)-(a8-c8)))*(((a8*d8)*(d8*b8))*b8)))))*(((((((c8-d8)*(d8*a8))+((b8*d8)*(b8+a8)))*b8)*c8)*(((((b8*b8)*b8)*((d8*c8)*d8))*(b8*d8))*(((a8+c8)*((d8*c8)+b8))*(((a8*a8)*(d8*c8))*(b8*(a8*c8))))))-d8));
	let temp_8_1 = ((((((((d8*c8)+a8)*((d8-c8)*c8))*(((d8-c8)*(a8+b8))*((c8*b8)*(a8*(26 as int)))))*((((c8*a8)*c8)*((b8+d8)-(c8*c8)))*c8))*(c8*((((d8*c8)*(a8*c8))*(c8*(a8*d8)))*(((b8*b8)*(a8*b8))*((c8*a8)+(a8*a8))))))*((((((a8-d8)*(b8*d8))*(a8*(d8+d8)))*(((a8*c8)+(b8*a8))*(((84 as int)*b8)*(b8*c8))))-(((((d8*d8)*a8)+((c8*b8)+(b8*d8)))*((d8-c8)*(c8*b8)))-((((d8*d8)*a8)+((c8*b8)+(b8*d8)))*(a8*(d8*b8)))))*(b8*((((c8*d8)+(c8*d8))+((d8*b8)-(a8-c8)))*(((a8*d8)*(d8*b8))*b8)))))*(((((((c8-d8)*(d8*a8))+((b8*d8)*(b8+a8)))*b8)*c8)*(((((b8*b8)*b8)*((d8*c8)*d8))*(b8*d8))*(((a8+c8)*((d8*c8)+b8))*(((a8*a8)*(d8*c8))*(b8*(a8*c8))))))-d8));
	assert(temp_8_0 == temp_8_1) by 
			{lemma_mul_is_distributive((((d8*d8)*a8)+((c8*b8)+(b8*d8))), ((d8-c8)*(c8*b8)), (a8*(d8*b8)));}// 1
	let temp_9_0 = ((((((((b9*b9)*(b9*a9))*((c9-a9)*(b9*a9)))*(((b9*d9)*(a9*a9))*(a9*d9)))-((((a9*d9)*d9)*(54 as int))*(((d9*c9)*d9)*((b9*c9)-((81 as int)+d9)))))*((a9*a9)*((((a9+d9)*(b9*d9))*((a9+b9)*(c9*c9)))*b9)))*((((((b9*d9)*(b9+d9))*c9)*(((b9*d9)*(a9*a9))*((d9*d9)-(d9*a9))))*((((d9*b9)+(c9*d9))*((b9*c9)+(d9*b9)))*(((a9-b9)*(d9*a9))*((a9*d9)*(b9*c9)))))*(((((a9*c9)+(c9*a9))*((c9*c9)*(c9*c9)))-(((b9*a9)*(c9*a9))*((a9*d9)+(b9*a9))))*((((a9*b9)*a9)*((a9*d9)*(b9*(26 as int))))-(((b9*d9)*(d9*b9))*(a9*(d9*b9)))))))*((((b9*(((a9*c9)*(c9*c9))*((b9*d9)*d9)))*c9)*(((((a9*a9)*(c9-d9))+a9)*d9)*(((c9+(a9*b9))*((c9+c9)*(c9*a9)))*((c9*b9)*((c9*a9)*(a9*c9))))))-((((d9*d9)*(((b9*d9)*(b9*a9))*((c9*a9)*b9)))*a9)*(d9-((((d9*c9)*(c9*a9))*(d9*(d9*a9)))*(((c9*d9)+(a9*c9))+((a9*c9)*(b9*c9))))))));
	let temp_9_1 = ((((((((b9*b9)*(b9*a9))*((c9-a9)*(b9*a9)))*(((b9*d9)*(a9*a9))*(a9*d9)))-((((a9*d9)*d9)*(54 as int))*(((d9*c9)*d9)*((b9*c9)-((81 as int)+d9)))))*((a9*a9)*((((a9+d9)*(b9*d9))*((a9+b9)*(c9*c9)))*b9)))*((((((b9*d9)*(b9+d9))*c9)*(((b9*d9)*(a9*a9))*((d9*d9)-(d9*a9))))*((((d9*b9)+(c9*d9))*((b9*c9)+(d9*b9)))*(((a9-b9)*(d9*a9))*((a9*d9)*(b9*c9)))))*(((((a9*c9)+(c9*a9))*((c9*c9)*(c9*c9)))-(((b9*a9)*(c9*a9))*((a9*d9)+(b9*a9))))*((((a9*b9)*a9)*((a9*d9)*(b9*(26 as int))))-(((b9*d9)*(d9*b9))*(a9*(d9*b9)))))))*((((b9*(((a9*c9)*(c9*c9))*((b9*d9)*d9)))*c9)*(((((a9*a9)*(c9-d9))+a9)*d9)*(((c9+(a9*b9))*((c9+c9)*(c9*a9)))*((b9*c9)*((c9*a9)*(a9*c9))))))-((((d9*d9)*(((b9*d9)*(b9*a9))*((c9*a9)*b9)))*a9)*(d9-((((d9*c9)*(c9*a9))*(d9*(d9*a9)))*(((c9*d9)+(a9*c9))+((a9*c9)*(b9*c9))))))));
	assert(temp_9_0 == temp_9_1) by 
			{lemma_mul_is_commutative(c9, b9);}// 1
	let temp_10_0 = (((((((c10-(d10*d10))+((b10*d10)*(b10*d10)))*(((a10*b10)*c10)*((d10*c10)-(d10*a10))))-((((a10*d10)*(b10*d10))-(b10*(d10*c10)))*(((b10*a10)*(d10*b10))*((b10*b10)*(a10*d10)))))*(((a10*(c10*(b10-c10)))*((b10*(b10*b10))*((d10*d10)*c10)))*((((a10*c10)*(a10*b10))*((c10*b10)*(a10*(98 as int))))*(a10*((b10*d10)*(b10*c10))))))*((((((c10*a10)*(a10*a10))*(a10*(a10*d10)))*(((a10*d10)*(c10*c10))*b10))*((((b10*c10)*(b10*b10))*((d10*a10)*(c10*c10)))*(((c10*a10)+(d10+a10))-(a10*(d10*c10)))))+(((b10*((c10*b10)+(a10*a10)))*(((c10*c10)*(c10*b10))*((b10*a10)*(b10+a10))))*((((a10*a10)*(c10*a10))*(c10*(a10*b10)))*((c10*(c10*d10))*((c10*c10)+(c10*a10)))))))*(((((((d10*b10)+d10)*(d10*(a10*c10)))*(b10*((c10*a10)-(a10*a10))))*((b10*(a10*(c10*b10)))*(((a10-b10)*(d10*a10))*((c10+a10)*(d10*c10)))))*((a10*(((d10+b10)*(b10*d10))*((d10-d10)*(c10*d10))))*((d10*(((27 as int)*c10)+(a10*a10)))*(((d10*d10)+(a10-b10))-(c10*(c10+b10))))))*(((((a10*(d10+d10))*((c10*d10)*(a10*d10)))*((d10*(a10+b10))*((a10*c10)*(b10*b10))))*((((b10*c10)-(c10+d10))*((a10*d10)-(a10*b10)))*(((d10*b10)+(a10*c10))*((d10*a10)-(b10-d10)))))*((((a10*d10)*(d10*((41 as int)*b10)))*(c10*((a10+b10)*(c10-a10))))*((((d10*c10)*((18 as int)*c10))*(d10*(a10*d10)))*c10)))));
	let temp_10_1 = (((((((c10-(d10*d10))+((b10*d10)*(b10*d10)))*(((a10*b10)*c10)*((d10*c10)-(d10*a10))))-((((a10*d10)*(b10*d10))-(b10*(d10*c10)))*(((b10*a10)*(d10*b10))*((b10*b10)*(a10*d10)))))*((((a10*c10)*(b10-c10))*((b10*(b10*b10))*((d10*d10)*c10)))*((((a10*c10)*(a10*b10))*((c10*b10)*(a10*(98 as int))))*(a10*((b10*d10)*(b10*c10))))))*((((((c10*a10)*(a10*a10))*(a10*(a10*d10)))*(((a10*d10)*(c10*c10))*b10))*((((b10*c10)*(b10*b10))*((d10*a10)*(c10*c10)))*(((c10*a10)+(d10+a10))-(a10*(d10*c10)))))+(((b10*((c10*b10)+(a10*a10)))*(((c10*c10)*(c10*b10))*((b10*a10)*(b10+a10))))*((((a10*a10)*(c10*a10))*(c10*(a10*b10)))*((c10*(c10*d10))*((c10*c10)+(c10*a10)))))))*(((((((d10*b10)+d10)*(d10*(a10*c10)))*(b10*((c10*a10)-(a10*a10))))*((b10*(a10*(c10*b10)))*(((a10-b10)*(d10*a10))*((c10+a10)*(d10*c10)))))*((a10*(((d10+b10)*(b10*d10))*((d10-d10)*(c10*d10))))*((d10*(((27 as int)*c10)+(a10*a10)))*(((d10*d10)+(a10-b10))-(c10*(c10+b10))))))*(((((a10*(d10+d10))*((c10*d10)*(a10*d10)))*((d10*(a10+b10))*((a10*c10)*(b10*b10))))*((((b10*c10)-(c10+d10))*((a10*d10)-(a10*b10)))*(((d10*b10)+(a10*c10))*((d10*a10)-(b10-d10)))))*((((a10*d10)*(d10*((41 as int)*b10)))*(c10*((a10+b10)*(c10-a10))))*((((d10*c10)*((18 as int)*c10))*(d10*(a10*d10)))*c10)))));
	assert(temp_10_0 == temp_10_1) by 
			{lemma_mul_is_associative(a10, c10, (b10-c10));}// 1
	let temp_11_0 = ((((((((c11-c11)-(a11*d11))*((a11*b11)*b11))*(((b11*d11)*(c11*a11))*(c11*(c11*d11))))*((((b11*a11)*(a11*c11))*d11)*(((a11*d11)*(a11-b11))*((c11*c11)*(d11*b11)))))*(((b11*((d11+b11)*(b11-c11)))-(((b11*c11)*d11)*((b11-b11)*(c11*c11))))*((((a11*d11)*c11)*((b11*a11)*(b11*b11)))*((c11*(b11*b11))*(b11*(d11*d11))))))*((((((b11*c11)*(b11*c11))*d11)*(((a11*d11)*(c11*c11))-c11))-((((d11*a11)*(d11*a11))*(d11*(a11+b11)))*b11))*(((((d11*a11)*(c11*d11))*(b11*(a11*b11)))*(((a11*c11)*d11)*((a11*d11)*(c11*b11))))*(a11*b11))))*((d11*((c11*(((b11*d11)*(a11*b11))-((c11*a11)*(c11*a11))))+(((b11+(c11-b11))*a11)*(c11+((d11*a11)*(d11+d11))))))*(b11*((d11*(((b11*a11)*(c11*c11))*((a11*c11)*(b11*c11))))*((((a11*c11)*(a11*c11))*((c11*a11)*(b11+b11)))+((c11*(a11+a11))*((a11*b11)*(b11*d11))))))));
	let temp_11_1 = ((((((((c11-c11)-(a11*d11))*((a11*b11)*b11))*(((b11*d11)*(c11*a11))*(c11*(c11*d11))))*((((b11*a11)*(a11*c11))*d11)*(((a11*d11)*(a11-b11))*((c11*c11)*(d11*b11)))))*(((b11*((d11+b11)*(b11-c11)))*((((a11*d11)*c11)*((b11*a11)*(b11*b11)))*((c11*(b11*b11))*(b11*(d11*d11)))))-((((b11*c11)*d11)*((b11-b11)*(c11*c11)))*((((a11*d11)*c11)*((b11*a11)*(b11*b11)))*((c11*(b11*b11))*(b11*(d11*d11)))))))*((((((b11*c11)*(b11*c11))*d11)*(((a11*d11)*(c11*c11))-c11))-((((d11*a11)*(d11*a11))*(d11*(a11+b11)))*b11))*(((((d11*a11)*(c11*d11))*(b11*(a11*b11)))*(((a11*c11)*d11)*((a11*d11)*(c11*b11))))*(a11*b11))))*((d11*((c11*(((b11*d11)*(a11*b11))-((c11*a11)*(c11*a11))))+(((b11+(c11-b11))*a11)*(c11+((d11*a11)*(d11+d11))))))*(b11*((d11*(((b11*a11)*(c11*c11))*((a11*c11)*(b11*c11))))*((((a11*c11)*(a11*c11))*((c11*a11)*(b11+b11)))+((c11*(a11+a11))*((a11*b11)*(b11*d11))))))));
	assert(temp_11_0 == temp_11_1) by 
			{lemma_mul_is_distributive((b11*((d11+b11)*(b11-c11))), (((b11*c11)*d11)*((b11-b11)*(c11*c11))), ((((a11*d11)*c11)*((b11*a11)*(b11*b11)))*((c11*(b11*b11))*(b11*(d11*d11)))));}// 1
	let temp_12_0 = ((((((((d12-a12)*(d12*a12))*((b12*d12)*c12))+(((b12+a12)*(d12*d12))-((a12*a12)*(b12*c12))))*((((c12+d12)*(a12*d12))*((c12*a12)*c12))*(((d12*d12)*(c12*d12))-(a12*(a12+d12)))))*((((c12*(a12*c12))*((c12*d12)*c12))*(((d12*d12)*(b12*a12))*c12))*(c12-((b12*(b12*a12))*((c12*c12)*(c12*c12))))))*((((((a12+c12)*(c12*b12))*(c12*(c12*d12)))*((b12-(b12*a12))*((c12*a12)*(b12*b12))))*((((d12*d12)*(b12*b12))*((c12*b12)-(c12*d12)))*((c12*a12)*c12)))+(((((c12+b12)*(b12*(70 as int)))*((c12*b12)+d12))*(a12*(((7 as int)*a12)*(a12*a12))))+(((b12*(b12*b12))*((a12*a12)-(d12*a12)))*(((b12*d12)*(c12*c12))*((b12+a12)*b12))))))*(((((d12+((d12*a12)*(d12*a12)))*((b12-(d12*c12))*(c12*(a12-b12))))*((((c12*a12)*(d12*d12))*((a12-b12)*(d12*c12)))*(((b12*b12)*(b12*a12))*(d12-((75 as int)*c12)))))+(((c12*((c12-a12)*a12))*(((b12*b12)*(b12-c12))*d12))*((((c12-c12)*(a12*d12))*(d12*(b12*d12)))+(b12*((b12*c12)*(d12-d12))))))+(c12*(((98 as int)*c12)*(((b12*(c12*a12))*((a12*c12)*(b12+c12)))+((b12*(d12*a12))*((c12*c12)*c12)))))));
	let temp_12_1 = ((((((((d12-a12)*(d12*a12))*((b12*d12)*c12))+(((b12+a12)*(d12*d12))-((a12*a12)*(b12*c12))))*((((c12+d12)*(a12*d12))*((c12*a12)*c12))*(((d12*d12)*(c12*d12))-(a12*(a12+d12)))))*((((c12*(a12*c12))*((c12*d12)*c12))*(((d12*d12)*(b12*a12))*c12))*(c12-((b12*(b12*a12))*((c12*c12)*(c12*c12))))))*((((((a12+c12)*(c12*b12))*(c12*(c12*d12)))*((b12-(b12*a12))*((c12*a12)*(b12*b12))))*((((d12*d12)*(b12*b12))*((c12*b12)-(c12*d12)))*((c12*a12)*c12)))+(((((c12+b12)*(b12*(70 as int)))*((c12*b12)+d12))*(a12*(((7 as int)*a12)*(a12*a12))))+(((b12*(b12*b12))*((a12*a12)-(d12*a12)))*(((b12*d12)*(c12*c12))*((b12+a12)*b12))))))*(((((d12+((d12*a12)*(d12*a12)))*((b12-(d12*c12))*(c12*(a12-b12))))*((((c12*a12)*(d12*d12))*((a12-b12)*(d12*c12)))*(((b12*b12)*(b12*a12))*(d12-((75 as int)*c12)))))+(((c12*((c12-a12)*a12))*(((b12*b12)*(b12-c12))*d12))*((((c12-c12)*(a12*d12))*(d12*(b12*d12)))+(b12*((b12*c12)*(d12-d12))))))+(c12*(((98 as int)*c12)*((((b12*(c12*a12))*(a12*c12))*(b12+c12))+((b12*(d12*a12))*((c12*c12)*c12)))))));
	assert(temp_12_0 == temp_12_1) by 
			{lemma_mul_is_associative((b12*(c12*a12)), (a12*c12), (b12+c12));}// 1
	let temp_13_0 = ((((((((d13-a13)*(d13*d13))*((d13*b13)*(c13*c13)))-((a13*(c13*a13))*d13))*(((d13*(d13*d13))*(b13*a13))*d13))-((((48 as int)*((b13*b13)+(a13*d13)))*a13)+(b13*b13)))*((d13+((((a13*c13)*(d13*a13))*((a13*b13)+(b13*a13)))+((b13*(b13*a13))*((b13*d13)+(c13*d13)))))-(((((a13*c13)*(d13*c13))*((c13*a13)*c13))-(d13-((c13*c13)*(c13*c13))))-((b13-(b13*(d13*c13)))*(((a13*c13)*(d13*a13))*((d13+a13)*(a13-d13)))))))*(((((((c13+a13)*(c13*a13))+(d13-(b13*d13)))*c13)*((((d13*d13)*(d13+b13))*((c13*d13)*(a13*b13)))*(((a13*b13)*(c13*b13))*((d13*b13)*(d13*d13)))))*((b13*((d13*(b13*c13))*((b13*a13)*(a13*c13))))*(d13*(((d13*d13)*a13)+(a13+(c13*b13))))))*((((((b13*a13)*(a13*a13))*((a13*b13)*(b13*c13)))*(((a13-c13)*b13)*b13))*((d13*((b13*d13)+a13))*(b13*((a13*b13)*a13))))*(((((a13*a13)*(b13-a13))*a13)*(((c13*d13)*c13)+(a13*d13)))-(((((39 as int)+b13)*(c13*a13))*((d13*a13)*(a13*(38 as int))))*(((c13*a13)*a13)*(d13*(c13-a13))))))));
	let temp_13_1 = ((((((((d13-a13)*(d13*d13))*((d13*b13)*(c13*c13)))-((a13*(c13*a13))*d13))*((d13*(d13*d13))*((b13*a13)*d13)))-((((48 as int)*((b13*b13)+(a13*d13)))*a13)+(b13*b13)))*((d13+((((a13*c13)*(d13*a13))*((a13*b13)+(b13*a13)))+((b13*(b13*a13))*((b13*d13)+(c13*d13)))))-(((((a13*c13)*(d13*c13))*((c13*a13)*c13))-(d13-((c13*c13)*(c13*c13))))-((b13-(b13*(d13*c13)))*(((a13*c13)*(d13*a13))*((d13+a13)*(a13-d13)))))))*(((((((c13+a13)*(c13*a13))+(d13-(b13*d13)))*c13)*((((d13*d13)*(d13+b13))*((c13*d13)*(a13*b13)))*(((a13*b13)*(c13*b13))*((d13*b13)*(d13*d13)))))*((b13*((d13*(b13*c13))*((b13*a13)*(a13*c13))))*(d13*(((d13*d13)*a13)+(a13+(c13*b13))))))*((((((b13*a13)*(a13*a13))*((a13*b13)*(b13*c13)))*(((a13-c13)*b13)*b13))*((d13*((b13*d13)+a13))*(b13*((a13*b13)*a13))))*(((((a13*a13)*(b13-a13))*a13)*(((c13*d13)*c13)+(a13*d13)))-(((((39 as int)+b13)*(c13*a13))*((d13*a13)*(a13*(38 as int))))*(((c13*a13)*a13)*(d13*(c13-a13))))))));
	assert(temp_13_0 == temp_13_1) by 
			{lemma_mul_is_associative((d13*(d13*d13)), (b13*a13), d13);}// 1
	let temp_14_0 = ((((((a14-((a14*b14)*(b14*a14)))*(((b14*a14)*(a14*d14))*((b14*b14)*(c14-a14))))*((((a14-c14)+(b14*a14))*((c14*b14)-(c14*d14)))*(b14*((b14*c14)*b14))))*d14)*a14)*((a14*(d14*(c14-(((c14*a14)-(c14*(11 as int)))*d14))))*((((((d14*d14)*(d14*a14))*d14)*(((d14*b14)*(b14*c14))*((c14*c14)*(c14-(51 as int)))))*((b14-(b14+(c14*c14)))*b14))+((((c14*((74 as int)*b14))*((b14*c14)*a14))*(((b14*a14)*(d14*c14))*((b14*c14)-a14)))*(a14*(d14*((d14*d14)*(b14*d14))))))));
	let temp_14_1 = ((((((a14-((a14*b14)*(b14*a14)))*(((b14*a14)*(a14*d14))*((b14*b14)*(c14-a14))))*((((a14-c14)+(b14*a14))*((c14*b14)-(c14*d14)))*(b14*((b14*c14)*b14))))*d14)*a14)*((a14*(d14*(c14-(((c14*a14)-((11 as int)*c14))*d14))))*((((((d14*d14)*(d14*a14))*d14)*(((d14*b14)*(b14*c14))*((c14*c14)*(c14-(51 as int)))))*((b14-(b14+(c14*c14)))*b14))+((((c14*((74 as int)*b14))*((b14*c14)*a14))*(((b14*a14)*(d14*c14))*((b14*c14)-a14)))*(a14*(d14*((d14*d14)*(b14*d14))))))));
	assert(temp_14_0 == temp_14_1) by 
			{lemma_mul_is_commutative(c14, (11 as int));}// 1
	let temp_15_0 = ((((((((a15*c15)*a15)*(c15+(c15*a15)))*(((d15+a15)+(c15*b15))*((a15*a15)*(a15-b15))))*((((b15*a15)*(a15-b15))*((c15+b15)*(b15*b15)))*(((a15-c15)*(c15*a15))+((c15+c15)*a15))))*(((((c15-b15)*(b15*c15))*((c15*d15)*(a15*b15)))+(((b15*d15)*(d15+b15))*((b15*c15)*(a15*d15))))*(((c15*(d15*c15))*((b15*c15)*a15))*(((c15*c15)*(a15-d15))*((b15*a15)*(a15*b15))))))-b15)*((((((((70 as int)*a15)-(b15*b15))*((d15+d15)*(a15*d15)))*(((b15*c15)+d15)+((d15*d15)*(d15*b15))))*((((d15*d15)-(c15*c15))*d15)*(((b15-d15)*(d15*c15))*((c15*a15)*(b15*c15)))))*(((((c15*d15)*(c15*c15))*((b15*d15)*(b15*d15)))*d15)*((((d15-b15)*(c15*d15))*((d15*a15)*(c15*b15)))*(b15*((c15*d15)*(a15*a15))))))*(((((c15*d15)*(d15*(a15*d15)))*((d15*a15)*((a15*d15)*(d15*d15))))*(d15*((a15*(d15*a15))*(b15*(c15+c15)))))*(((a15*((a15*c15)*(b15+c15)))*((a15+(a15*c15))*((b15*a15)*(b15*a15))))*(a15*(((d15*d15)*(a15*b15))+((a15*d15)*(a15*c15))))))));
	let temp_15_1 = ((((((((a15*c15)*a15)*(c15+(c15*a15)))*(((d15+a15)+(c15*b15))*((a15*a15)*(a15-b15))))*((((b15*a15)*(a15-b15))*((c15+b15)*(b15*b15)))*(((a15-c15)*(c15*a15))+((c15+c15)*a15))))*(((((c15-b15)*(b15*c15))*((c15*d15)*(a15*b15)))+(((b15*d15)*(d15+b15))*((b15*c15)*(a15*d15))))*(((c15*(d15*c15))*((b15*c15)*a15))*(((c15*c15)*(a15-d15))*((b15*a15)*(a15*b15))))))-b15)*((((((((70 as int)*a15)-(b15*b15))*((d15+d15)*(a15*d15)))*(((b15*c15)+d15)+((d15*d15)*(d15*b15))))*((((d15*d15)-(c15*c15))*d15)*(((b15-d15)*(d15*c15))*((c15*a15)*(b15*c15)))))*(((((c15*d15)*(c15*c15))*((b15*d15)*(b15*d15)))*d15)*((((d15-b15)*(c15*d15))*((d15*a15)*(c15*b15)))*(b15*((d15*c15)*(a15*a15))))))*(((((c15*d15)*(d15*(a15*d15)))*((d15*a15)*((a15*d15)*(d15*d15))))*(d15*((a15*(d15*a15))*(b15*(c15+c15)))))*(((a15*((a15*c15)*(b15+c15)))*((a15+(a15*c15))*((b15*a15)*(b15*a15))))*(a15*(((d15*d15)*(a15*b15))+((a15*d15)*(a15*c15))))))));
	assert(temp_15_0 == temp_15_1) by 
			{lemma_mul_is_commutative(c15, d15);}// 1
	let temp_16_0 = ((((((((c16*b16)*(d16*d16))-((b16*b16)*(c16*a16)))*(((d16*b16)*d16)*(c16*d16)))*((c16*((c16*c16)*(d16*d16)))*((b16*(b16*a16))*((a16*a16)*(c16*d16)))))*(((d16*(b16*c16))-(((c16*a16)*(a16*c16))*(d16*(c16*d16))))*((((d16*d16)+(d16*c16))*((c16*d16)*(a16*a16)))*(((b16*a16)*b16)*d16))))-((((((a16*a16)*(b16*d16))*((d16*b16)*(b16*b16)))*b16)*((d16*a16)*(b16*(((26 as int)*d16)*(61 as int)))))*(((((a16*d16)*(c16*b16))+(b16*a16))+(((b16*c16)*(c16*d16))*((a16*d16)*(c16*d16))))*((((b16*d16)*(c16-c16))+((d16*b16)*((87 as int)-c16)))*(c16*(((96 as int)*a16)*(b16*b16)))))))*(((((d16*((a16*d16)*(c16*(48 as int))))*(((a16*b16)*(a16*b16))*((a16*c16)*(d16*a16))))*((((c16*a16)*(c16*d16))*((d16-a16)*(c16*d16)))+(d16+((c16*c16)+(b16*b16)))))*(((((b16*c16)*(c16*a16))*c16)*(((b16*b16)*(d16*d16))*((c16-c16)*(a16*c16))))*(((b16*(a16+d16))*c16)*(((d16-b16)*(c16*b16))*((b16*b16)*(b16*d16))))))*((((((a16*a16)*(a16*d16))*((b16+c16)+(c16+d16)))*(((a16-d16)*(b16*a16))*(d16*d16)))*((((d16*d16)+d16)*((a16*a16)*(c16*c16)))*(((c16*c16)+(d16*a16))*((d16-a16)*(b16-c16)))))*((b16*(((b16*b16)*(a16-a16))*((d16*c16)+(b16*b16))))-((((b16-a16)-(a16*c16))*(72 as int))+(((b16-c16)*(b16*b16))*((b16-b16)*(d16+b16))))))));
	let temp_16_1 = ((((((((c16*b16)*(d16*d16))-((b16*b16)*(c16*a16)))*(((d16*b16)*d16)*(c16*d16)))*((c16*((c16*c16)*(d16*d16)))*((b16*(b16*a16))*((a16*a16)*(c16*d16)))))*(((d16*(b16*c16))-(((c16*a16)*(a16*c16))*(d16*(c16*d16))))*((((d16*d16)+(d16*c16))*((c16*d16)*(a16*a16)))*(((b16*a16)*b16)*d16))))-((((((a16*a16)*(b16*d16))*((d16*b16)*(b16*b16)))*b16)*((d16*a16)*(b16*(((26 as int)*d16)*(61 as int)))))*(((((a16*d16)*(c16*b16))+(b16*a16))+(((b16*c16)*(c16*d16))*((a16*d16)*(c16*d16))))*((((b16*d16)*(c16-c16))+((d16*b16)*((87 as int)-c16)))*(c16*(((96 as int)*a16)*(b16*b16)))))))*(((((d16*((a16*d16)*(c16*(48 as int))))*(((a16*b16)*(a16*b16))*((a16*c16)*(d16*a16))))*((((c16*a16)*(c16*d16))*((d16-a16)*(c16*d16)))+(d16+((c16*c16)+(b16*b16)))))*(((((b16*c16)*(c16*a16))*c16)*(((b16*b16)*(d16*d16))*((c16-c16)*(a16*c16))))*(((b16*(a16+d16))*c16)*(((d16-b16)*(c16*b16))*((b16*b16)*(b16*d16))))))*((((((a16*a16)*(a16*d16))*((b16+c16)+(c16+d16)))*(((a16-d16)*(b16*a16))*(d16*d16)))*((((d16*d16)+d16)*((a16*a16)*(c16*c16)))*(((c16*c16)+(d16*a16))*((d16-a16)*(b16-c16)))))*((b16*(((b16*b16)*(a16-a16))*((d16*c16)+(b16*b16))))-((((b16-a16)-(a16*c16))*(72 as int))+(((b16-c16)*(b16*b16))*((b16-b16)*(d16+b16))))))));
	assert(temp_16_0 == temp_16_1) by 
			{lemma_mul_is_commutative(d16, d16);}// 1
	let temp_17_0 = ((((((((a17*d17)+(b17*c17))*((c17*d17)-(d17-c17)))*(((d17*c17)+d17)*((a17*b17)*(d17*b17))))*d17)*(((((c17*(6 as int))*(b17*d17))+(a17*(d17*d17)))*(((b17+b17)*(d17+c17))*((b17+(77 as int))*((72 as int)*c17))))*((((c17*b17)*(c17*d17))*((d17*c17)+b17))*(((b17-c17)-(c17+b17))*d17))))*((((((d17*d17)*(a17*c17))*(b17-((87 as int)*a17)))*(((a17*a17)*c17)+((a17-b17)*(c17*a17))))*((c17*(b17*(a17+c17)))-(((b17*c17)*(a17-a17))*((c17+a17)*(b17*d17)))))*b17))*(((((((c17*d17)*(d17*c17))+((c17*a17)+c17))*(((c17+c17)*c17)*((d17*d17)*(d17*b17))))*c17)-((((d17*(c17*c17))*((c17*d17)*d17))*(((c17*c17)*(c17*a17))*((c17-b17)*(a17*d17))))*((((b17*b17)-(a17*c17))*(c17*(d17*a17)))+c17)))*(((((a17*(d17*d17))+((a17*d17)+(c17-a17)))*(((57 as int)*(c17-b17))*(c17*(a17*a17))))*a17)*(((((b17-b17)*c17)*((c17*b17)*(d17*c17)))*(((c17*(98 as int))*(a17*b17))*(a17+(a17*a17))))*((((a17-b17)+(b17-b17))*((b17*b17)+(d17*b17)))*(((d17*c17)*d17)*((b17*b17)+(b17*b17))))))));
	let temp_17_1 = ((((((((a17*d17)+(c17*b17))*((c17*d17)-(d17-c17)))*(((d17*c17)+d17)*((a17*b17)*(d17*b17))))*d17)*(((((c17*(6 as int))*(b17*d17))+(a17*(d17*d17)))*(((b17+b17)*(d17+c17))*((b17+(77 as int))*((72 as int)*c17))))*((((c17*b17)*(c17*d17))*((d17*c17)+b17))*(((b17-c17)-(c17+b17))*d17))))*((((((d17*d17)*(a17*c17))*(b17-((87 as int)*a17)))*(((a17*a17)*c17)+((a17-b17)*(c17*a17))))*((c17*(b17*(a17+c17)))-(((b17*c17)*(a17-a17))*((c17+a17)*(b17*d17)))))*b17))*(((((((c17*d17)*(d17*c17))+((c17*a17)+c17))*(((c17+c17)*c17)*((d17*d17)*(d17*b17))))*c17)-((((d17*(c17*c17))*((c17*d17)*d17))*(((c17*c17)*(c17*a17))*((c17-b17)*(a17*d17))))*((((b17*b17)-(a17*c17))*(c17*(d17*a17)))+c17)))*(((((a17*(d17*d17))+((a17*d17)+(c17-a17)))*(((57 as int)*(c17-b17))*(c17*(a17*a17))))*a17)*(((((b17-b17)*c17)*((c17*b17)*(d17*c17)))*(((c17*(98 as int))*(a17*b17))*(a17+(a17*a17))))*((((a17-b17)+(b17-b17))*((b17*b17)+(d17*b17)))*(((d17*c17)*d17)*((b17*b17)+(b17*b17))))))));
	assert(temp_17_0 == temp_17_1) by 
			{lemma_mul_is_commutative(b17, c17);}// 1
	let temp_18_0 = (c18-((((d18*((c18*(c18*c18))*(c18*c18)))*((((b18*b18)+(d18+c18))*((d18+a18)*b18))-(((b18*c18)*(b18*c18))*(b18+(d18*d18)))))*((((d18*(d18*c18))*((c18*b18)*(d18+c18)))*(((a18+b18)*(c18*d18))-((27 as int)*(d18*a18))))*(d18*(((d18+d18)*(b18*d18))-((c18*a18)*(d18*(96 as int)))))))-((b18-((((d18*a18)*(a18*b18))*((d18*a18)*c18))*(((a18*c18)*(c18*c18))*b18)))*(((((b18*b18)*(a18+a18))*(b18*(d18*b18)))*(c18+((a18*d18)*d18)))*((((a18*a18)*(a18-c18))*((d18*c18)*(c18*d18)))+((b18*(b18*a18))+b18))))));
	let temp_18_1 = (c18-((((d18*((c18*(c18*c18))*(c18*c18)))*((((b18*b18)+(d18+c18))*((d18+a18)*b18))-(((b18*c18)*(b18*c18))*(b18+(d18*d18)))))*((((d18*(d18*c18))*((c18*b18)*(d18+c18)))*(((a18+b18)*(c18*d18))-((27 as int)*(d18*a18))))*(d18*(((d18+d18)*(b18*d18))-((c18*a18)*(d18*(96 as int)))))))-((b18-((((d18*a18)*(a18*b18))*((d18*a18)*c18))*(((a18*c18)*(c18*c18))*b18)))*(((c18+((a18*d18)*d18))*(((b18*b18)*(a18+a18))*(b18*(d18*b18))))*((((a18*a18)*(a18-c18))*((d18*c18)*(c18*d18)))+((b18*(b18*a18))+b18))))));
	assert(temp_18_0 == temp_18_1) by 
			{lemma_mul_is_commutative((((b18*b18)*(a18+a18))*(b18*(d18*b18))), (c18+((a18*d18)*d18)));}// 1
	let temp_19_0 = (((((((b19*(b19*c19))*((b19+b19)+(b19*d19)))*((d19*a19)*(d19*(c19*d19))))*((((a19*d19)*(b19*a19))*((d19*b19)*(b19-c19)))*d19))*(((((a19*a19)*(b19*d19))*c19)*(((d19*b19)*b19)-(c19*(c19*d19))))*(((a19*(a19*c19))*(a19*c19))*(((d19*b19)+(b19*c19))*(b19-(a19*b19))))))+((((((d19*d19)*(a19*b19))*((d19*a19)*(d19*d19)))*((((69 as int)*d19)-(c19*d19))+((a19+d19)*(a19*d19))))*((((d19*c19)*(b19*b19))+((d19*b19)*(c19*b19)))*c19))*((c19*(c19*a19))*(b19*((d19*(c19*b19))-(((62 as int)*c19)*(b19*c19)))))))*(((((((a19*d19)+(a19+d19))*((b19*d19)*(b19*b19)))*(((d19*c19)*(d19*a19))*a19))*((((c19*a19)-(a19*b19))+((c19*b19)*(a19*c19)))-(a19*((b19*d19)*(c19*c19)))))-d19)*((((((a19*d19)*(c19*d19))+((d19-d19)*(a19*d19)))*(((b19*d19)*(a19+c19))*((a19*a19)-c19)))*(b19*(((a19*b19)-a19)*((d19*c19)*(a19*d19)))))*(((((c19*a19)*a19)*((b19*d19)*(a19-b19)))-(((d19-d19)*b19)+((a19*d19)*d19)))-((((a19-b19)*(d19*c19))*((c19*c19)*(a19*c19)))+(c19*((a19*a19)*(d19*a19))))))));
	let temp_19_1 = (((((((b19*(b19*c19))*((b19+b19)+(b19*d19)))*((d19*a19)*(d19*(c19*d19))))*((((a19*d19)*(b19*a19))*((d19*b19)*(b19-c19)))*d19))*(((((a19*a19)*(b19*d19))*c19)*(((d19*b19)*b19)-(c19*(c19*d19))))*(((a19*(a19*c19))*(a19*c19))*(((d19*b19)+(b19*c19))*(b19-(a19*b19))))))+((((((d19*d19)*(a19*b19))*((d19*a19)*(d19*d19)))*((((69 as int)*d19)-(c19*d19))+((a19+d19)*(a19*d19))))*((((d19*c19)*(b19*b19))+((d19*b19)*(c19*b19)))*c19))*(((c19*a19)*c19)*(b19*((d19*(c19*b19))-(((62 as int)*c19)*(b19*c19)))))))*(((((((a19*d19)+(a19+d19))*((b19*d19)*(b19*b19)))*(((d19*c19)*(d19*a19))*a19))*((((c19*a19)-(a19*b19))+((c19*b19)*(a19*c19)))-(a19*((b19*d19)*(c19*c19)))))-d19)*((((((a19*d19)*(c19*d19))+((d19-d19)*(a19*d19)))*(((b19*d19)*(a19+c19))*((a19*a19)-c19)))*(b19*(((a19*b19)-a19)*((d19*c19)*(a19*d19)))))*(((((c19*a19)*a19)*((b19*d19)*(a19-b19)))-(((d19-d19)*b19)+((a19*d19)*d19)))-((((a19-b19)*(d19*c19))*((c19*c19)*(a19*c19)))+(c19*((a19*a19)*(d19*a19))))))));
	assert(temp_19_0 == temp_19_1) by 
			{lemma_mul_is_commutative(c19, (c19*a19));}// 1
	let temp_20_0 = ((((((((b20*a20)*(a20*d20))*(d20*(b20*a20)))-(((d20*(38 as int))*d20)+((c20*b20)*(c20*b20))))*((((c20*d20)-(b20*b20))*b20)*((((56 as int)*b20)+(c20*b20))+((a20*d20)*c20))))*(d20+((((a20*a20)*(b20*d20))*((d20*c20)+(d20*c20)))-(((a20*b20)*(d20*d20))*((c20+d20)*d20)))))*((((((c20+b20)*(a20*c20))*((a20*(92 as int))*(d20*c20)))*(c20*((d20+c20)*(c20*(24 as int)))))*((((b20*d20)*(a20+c20))*((b20*d20)*(d20*a20)))*(((a20*b20)*(b20+d20))*((d20*b20)*(a20+c20)))))-(((((b20*c20)*(c20*c20))+(a20+(b20*a20)))-(((d20*b20)*(d20*a20))*((c20*b20)*(a20*d20))))*((((b20*d20)+(c20-d20))*((a20*b20)*(b20*c20)))+((d20*((94 as int)*b20))*((d20+a20)*(a20*a20)))))))*((((((c20*(d20-b20))*((a20+d20)+(c20*c20)))*(((a20*c20)+(c20*c20))*a20))*((((c20*b20)*(b20*a20))*((d20*c20)*(b20*c20)))*((b20*c20)*((d20*a20)*b20))))*(d20+((b20*((d20*b20)-(d20*b20)))+((c20*(a20*a20))*((a20+d20)*(d20*b20))))))*((((b20*((c20+b20)+(c20+b20)))*(((d20*c20)*(a20*c20))*((a20*b20)*(a20*d20))))-((((b20-a20)*(c20*d20))+c20)*d20))-(((((a20*b20)*(d20*b20))*(b20-(c20*b20)))*(c20*((d20+d20)*(d20*b20))))*((((c20*b20)*c20)*(((4 as int)+a20)*(b20*d20)))*(((b20*c20)+a20)*((b20*d20)*(a20*a20))))))));
	let temp_20_1 = ((((((((b20*a20)*(a20*d20))*(d20*(b20*a20)))-(((d20*(38 as int))*d20)+((c20*b20)*(c20*b20))))*((((c20*d20)-(b20*b20))*b20)*((((56 as int)*b20)+(c20*b20))+((a20*d20)*c20))))*(d20+((((a20*a20)*(b20*d20))*((d20*c20)+(d20*c20)))-(((a20*b20)*(d20*d20))*((c20+d20)*d20)))))*((((((c20+b20)*(a20*c20))*((a20*(92 as int))*(d20*c20)))*(c20*((d20+c20)*(c20*(24 as int)))))*((((b20*d20)*(a20+c20))*((b20*d20)*(d20*a20)))*(((a20*b20)*(b20+d20))*((d20*b20)*(a20+c20)))))-(((((b20*c20)*(c20*c20))+(a20+(b20*a20)))-(((d20*b20)*(d20*a20))*((c20*b20)*(a20*d20))))*((((b20*d20)+(c20-d20))*((a20*b20)*(b20*c20)))+((d20*((94 as int)*b20))*((d20+a20)*(a20*a20)))))))*((((((c20*(d20-b20))*((a20+d20)+(c20*c20)))*(((a20*c20)+(c20*c20))*a20))*((((c20*b20)*(b20*a20))*((d20*c20)*(b20*c20)))*((b20*c20)*((d20*a20)*b20))))*(d20+(((b20*(d20*b20))-(b20*(d20*b20)))+((c20*(a20*a20))*((a20+d20)*(d20*b20))))))*((((b20*((c20+b20)+(c20+b20)))*(((d20*c20)*(a20*c20))*((a20*b20)*(a20*d20))))-((((b20-a20)*(c20*d20))+c20)*d20))-(((((a20*b20)*(d20*b20))*(b20-(c20*b20)))*(c20*((d20+d20)*(d20*b20))))*((((c20*b20)*c20)*(((4 as int)+a20)*(b20*d20)))*(((b20*c20)+a20)*((b20*d20)*(a20*a20))))))));
	assert(temp_20_0 == temp_20_1) by 
			{lemma_mul_is_distributive(b20, (d20*b20), (d20*b20));}// 1
	let temp_21_0 = (((((((((62 as int)+a21)+(b21*c21))*((a21*a21)-(b21*a21)))*(((c21*d21)*(b21*d21))*((d21*d21)*(c21*d21))))-((((a21*c21)*(c21-a21))-((b21*d21)*(a21*b21)))*a21))*(((((b21+c21)*(a21*b21))+((b21*b21)*(b21*d21)))*((b21-(b21+b21))+((d21*b21)*b21)))*((((a21*a21)+(d21*d21))*(d21*(d21*b21)))*(((c21*c21)*(b21*(68 as int)))-((b21*b21)-(d21*d21))))))+(((c21+(((d21*c21)-(b21*a21))*(a21*(a21*a21))))-(((c21+c21)*((a21*b21)-(c21+a21)))*((c21-((59 as int)*a21))*((a21*a21)+(d21*b21)))))*b21))*(((((((d21*c21)*b21)+((d21+c21)*c21))*(((a21-d21)-(c21*c21))*((c21*b21)*(a21*a21))))*(((b21*(d21*b21))*((a21*c21)-a21))*(((d21*a21)*(c21+(60 as int)))*a21)))*(((((a21-b21)-(d21-d21))*((a21-b21)*(d21-c21)))*(((d21*b21)*(a21*b21))*d21))*((((c21*d21)-(c21-b21))*((c21-b21)-(c21*c21)))*(((b21*c21)*(96 as int))*((a21*a21)*(d21*a21))))))*(((((d21*(c21*c21))*((a21*d21)-(d21*b21)))*(((c21+c21)*(c21*b21))*((c21*a21)+(a21+b21))))*((((b21*d21)+c21)*((b21+(60 as int))-c21))*(((d21-d21)*(b21*(34 as int)))-((a21*a21)*(b21-b21)))))*(((((a21-b21)*(b21*d21))*((b21*c21)*(b21*(35 as int))))*(((a21*a21)*b21)*b21))*(((b21-b21)*((c21*b21)*(c21+d21)))*(((c21*a21)*(a21+a21))*((c21*a21)*(b21*a21))))))));
	let temp_21_1 = (((((((((62 as int)+a21)+(b21*c21))*((a21*a21)-(b21*a21)))*(((c21*d21)*(b21*d21))*((d21*d21)*(c21*d21))))-((((a21*c21)*(c21-a21))-((d21*b21)*(a21*b21)))*a21))*(((((b21+c21)*(a21*b21))+((b21*b21)*(b21*d21)))*((b21-(b21+b21))+((d21*b21)*b21)))*((((a21*a21)+(d21*d21))*(d21*(d21*b21)))*(((c21*c21)*(b21*(68 as int)))-((b21*b21)-(d21*d21))))))+(((c21+(((d21*c21)-(b21*a21))*(a21*(a21*a21))))-(((c21+c21)*((a21*b21)-(c21+a21)))*((c21-((59 as int)*a21))*((a21*a21)+(d21*b21)))))*b21))*(((((((d21*c21)*b21)+((d21+c21)*c21))*(((a21-d21)-(c21*c21))*((c21*b21)*(a21*a21))))*(((b21*(d21*b21))*((a21*c21)-a21))*(((d21*a21)*(c21+(60 as int)))*a21)))*(((((a21-b21)-(d21-d21))*((a21-b21)*(d21-c21)))*(((d21*b21)*(a21*b21))*d21))*((((c21*d21)-(c21-b21))*((c21-b21)-(c21*c21)))*(((b21*c21)*(96 as int))*((a21*a21)*(d21*a21))))))*(((((d21*(c21*c21))*((a21*d21)-(d21*b21)))*(((c21+c21)*(c21*b21))*((c21*a21)+(a21+b21))))*((((b21*d21)+c21)*((b21+(60 as int))-c21))*(((d21-d21)*(b21*(34 as int)))-((a21*a21)*(b21-b21)))))*(((((a21-b21)*(b21*d21))*((b21*c21)*(b21*(35 as int))))*(((a21*a21)*b21)*b21))*(((b21-b21)*((c21*b21)*(c21+d21)))*(((c21*a21)*(a21+a21))*((c21*a21)*(b21*a21))))))));
	assert(temp_21_0 == temp_21_1) by 
			{lemma_mul_is_commutative(b21, d21);}// 1
	let temp_22_0 = ((d22*((((b22*((d22*a22)*(a22*a22)))*(((a22*a22)*(a22*a22))+c22))*(((c22*((99 as int)*c22))*((c22*b22)*(b22*c22)))*(((b22*b22)*(c22+a22))*((c22*d22)*(c22*c22)))))*a22))*(((((((c22*b22)*(d22*a22))*a22)*(a22*((c22*d22)*b22)))-((((a22+a22)+(c22-a22))*b22)*((b22*(c22*b22))-((c22*d22)-(b22*b22)))))*(c22*((((c22*d22)*(a22*b22))*((c22*d22)*(a22*c22)))*(((d22*a22)*(a22*c22))*((a22*c22)*(c22*a22))))))*((((((d22*d22)-(c22-d22))-((c22*a22)+(d22*d22)))*(((c22-d22)-(d22*d22))+((a22*a22)*(c22*b22))))*(((a22*(c22+a22))*((c22*d22)*(d22*b22)))*(((d22*a22)*(a22*a22))*((c22*d22)*(c22-d22)))))*(((((d22*b22)*(d22*d22))*((d22*b22)*(b22*c22)))*((c22*(d22*a22))*d22))-((((b22+d22)*(a22*b22))*((c22*d22)+(c22*c22)))*(((c22*d22)*(a22*a22))*((b22*d22)*(d22*c22))))))));
	let temp_22_1 = ((d22*((((b22*((d22*a22)*(a22*a22)))*(((a22*a22)*(a22*a22))+c22))*(((c22*((99 as int)*c22))*((c22*b22)*(b22*c22)))*(((b22*b22)*(c22+a22))*((c22*d22)*(c22*c22)))))*a22))*(((((((c22*b22)*(d22*a22))*a22)*(a22*((c22*d22)*b22)))-((((a22+a22)+(c22-a22))*b22)*((b22*(c22*b22))-((c22*d22)-(b22*b22)))))*(c22*((((c22*d22)*(a22*b22))*((c22*d22)*(a22*c22)))*(((d22*a22)*(a22*c22))*((a22*c22)*(c22*a22))))))*((((((d22*d22)-(c22-d22))-((c22*a22)+(d22*d22)))*(((c22-d22)-(d22*d22))+((a22*a22)*(c22*b22))))*(((a22*(c22+a22))*((c22*d22)*(d22*b22)))*(((d22*a22)*(a22*a22))*((c22*d22)*(c22-d22)))))*(((((d22*b22)*(d22*d22))*((d22*b22)*(b22*c22)))*((c22*(d22*a22))*d22))-((((b22+d22)*(a22*b22))*((c22*d22)+(c22*c22)))*(((c22*d22)*(a22*a22))*((b22*d22)*(d22*c22))))))));
	assert(temp_22_0 == temp_22_1) by 
			{lemma_mul_is_commutative(a22, a22);}// 1
	let temp_23_0 = (((((((((21 as int)*c23)*(d23*b23))*((d23*b23)*(b23+c23)))*(((c23*d23)-(d23*d23))+c23))-(b23*(((a23*b23)*(b23*b23))*((c23*b23)*(d23*a23)))))*(((c23*((a23*d23)*(b23*c23)))*(((c23*b23)*(a23*a23))*((a23+a23)*(a23*b23))))*c23))*((((((c23*c23)*(c23*a23))+((b23*c23)+b23))+(((d23+a23)*(b23*d23))-a23))+((((d23*c23)*(c23*c23))*((c23*b23)*(c23*d23)))-(((b23+b23)*(d23+c23))*((c23*a23)*(b23+d23)))))-(((a23*((d23*c23)*(d23*c23)))*(d23*((c23*b23)*(b23*b23))))+((((a23*b23)+(b23*a23))-((b23+b23)*(a23*b23)))*((d23*(d23*c23))+((c23+b23)*(c23*c23)))))))+((((d23*(((d23*c23)+(a23-b23))*((a23*c23)+(c23*c23))))+(((b23*(a23*c23))*((b23*d23)+(b23*c23)))*(((a23*b23)+((88 as int)*b23))*((a23*b23)*(b23*d23)))))*(a23*(c23*(a23-((b23*d23)*(d23*c23))))))*(((((b23-(a23*b23))*b23)-c23)*(b23*(((a23*c23)+((72 as int)*b23))*((d23*d23)*a23))))*(d23*((((b23*a23)*(b23*b23))*d23)*((((95 as int)*c23)-(a23*d23))*b23))))));
	let temp_23_1 = (((((((((21 as int)*c23)*(d23*b23))*((d23*b23)*(b23+c23)))*(((c23*d23)-(d23*d23))+c23))-(b23*((((a23*b23)*(b23*b23))*(c23*b23))*(d23*a23))))*(((c23*((a23*d23)*(b23*c23)))*(((c23*b23)*(a23*a23))*((a23+a23)*(a23*b23))))*c23))*((((((c23*c23)*(c23*a23))+((b23*c23)+b23))+(((d23+a23)*(b23*d23))-a23))+((((d23*c23)*(c23*c23))*((c23*b23)*(c23*d23)))-(((b23+b23)*(d23+c23))*((c23*a23)*(b23+d23)))))-(((a23*((d23*c23)*(d23*c23)))*(d23*((c23*b23)*(b23*b23))))+((((a23*b23)+(b23*a23))-((b23+b23)*(a23*b23)))*((d23*(d23*c23))+((c23+b23)*(c23*c23)))))))+((((d23*(((d23*c23)+(a23-b23))*((a23*c23)+(c23*c23))))+(((b23*(a23*c23))*((b23*d23)+(b23*c23)))*(((a23*b23)+((88 as int)*b23))*((a23*b23)*(b23*d23)))))*(a23*(c23*(a23-((b23*d23)*(d23*c23))))))*(((((b23-(a23*b23))*b23)-c23)*(b23*(((a23*c23)+((72 as int)*b23))*((d23*d23)*a23))))*(d23*((((b23*a23)*(b23*b23))*d23)*((((95 as int)*c23)-(a23*d23))*b23))))));
	assert(temp_23_0 == temp_23_1) by 
			{lemma_mul_is_associative(((a23*b23)*(b23*b23)), (c23*b23), (d23*a23));}// 1
	let temp_24_0 = (((((((c24*(b24+c24))*(a24*(c24*b24)))*((d24+(21 as int))*(((23 as int)*a24)-(b24*c24))))*(b24*(((a24*c24)*(b24*c24))*((d24*c24)*(d24*a24)))))*(((c24*d24)*(((c24*a24)*(a24*a24))+((a24*c24)*a24)))*((((a24+b24)*(d24*d24))*b24)*(((d24+d24)*(a24*d24))*((a24-c24)*(a24*(94 as int)))))))*((((b24+((c24*b24)-(a24*c24)))-(((a24*c24)*(b24+d24))*((a24+d24)*(a24*d24))))*((c24*((c24*b24)*a24))*(((b24*b24)*(b24*d24))-((a24*a24)*(b24+b24)))))*(((((c24*d24)*(a24*d24))*((c24*a24)*(b24+c24)))*(c24*(c24*(c24*c24))))*((((a24*d24)*a24)*((d24+c24)+(b24*a24)))*(((a24*a24)-(a24*a24))*((c24*a24)+(d24*d24)))))))*(((((((d24*c24)+(b24*b24))*((a24*a24)+(d24*a24)))*(((d24*d24)*(b24*d24))-((d24+c24)*(c24*c24))))*((d24*(a24*(d24*c24)))*d24))*(c24+((((c24-d24)*(a24*a24))*((b24*a24)*(b24*c24)))*(((b24-b24)*(d24*b24))*c24))))*((((((d24*d24)-(d24*b24))*((b24*d24)+(d24*c24)))*(((a24-a24)+(a24*c24))*d24))*((((a24*c24)*c24)-((a24*d24)*a24))+(((d24*c24)*(d24-d24))*((d24*a24)*(c24*d24)))))*(((((c24*b24)*(d24*d24))*(((84 as int)*b24)*(b24*d24)))*((b24*(c24*b24))*((d24*c24)-(c24*a24))))*(c24*(((c24*c24)*(c24*c24))*(b24+(c24-c24))))))));
	let temp_24_1 = (((((((c24*(b24+c24))*(a24*(c24*b24)))*((d24+(21 as int))*(((23 as int)*a24)-(b24*c24))))*(b24*(((a24*c24)*(b24*c24))*((d24*c24)*(d24*a24)))))*(((c24*d24)*(((c24*a24)*(a24*a24))+((a24*c24)*a24)))*((((a24+b24)*(d24*d24))*b24)*(((d24+d24)*(a24*d24))*((a24-c24)*(a24*(94 as int)))))))*((((b24+((c24*b24)-(a24*c24)))-(((c24*a24)*(b24+d24))*((a24+d24)*(a24*d24))))*((c24*((c24*b24)*a24))*(((b24*b24)*(b24*d24))-((a24*a24)*(b24+b24)))))*(((((c24*d24)*(a24*d24))*((c24*a24)*(b24+c24)))*(c24*(c24*(c24*c24))))*((((a24*d24)*a24)*((d24+c24)+(b24*a24)))*(((a24*a24)-(a24*a24))*((c24*a24)+(d24*d24)))))))*(((((((d24*c24)+(b24*b24))*((a24*a24)+(d24*a24)))*(((d24*d24)*(b24*d24))-((d24+c24)*(c24*c24))))*((d24*(a24*(d24*c24)))*d24))*(c24+((((c24-d24)*(a24*a24))*((b24*a24)*(b24*c24)))*(((b24-b24)*(d24*b24))*c24))))*((((((d24*d24)-(d24*b24))*((b24*d24)+(d24*c24)))*(((a24-a24)+(a24*c24))*d24))*((((a24*c24)*c24)-((a24*d24)*a24))+(((d24*c24)*(d24-d24))*((d24*a24)*(c24*d24)))))*(((((c24*b24)*(d24*d24))*(((84 as int)*b24)*(b24*d24)))*((b24*(c24*b24))*((d24*c24)-(c24*a24))))*(c24*(((c24*c24)*(c24*c24))*(b24+(c24-c24))))))));
	assert(temp_24_0 == temp_24_1) by 
			{lemma_mul_is_commutative(a24, c24);}// 1
	let temp_25_0 = ((((((((b25*d25)*(b25*a25))*((a25*a25)-(a25*b25)))+(((c25+d25)+c25)-((c25*b25)*(a25-d25))))*(((a25*(a25*d25))*((d25*c25)*(c25*c25)))*(((b25-a25)*(c25*b25))*((c25*a25)*c25))))*(((d25*((d25-a25)*(c25*a25)))-(c25+((b25*c25)*(b25*b25))))*(((d25*(b25*c25))*((a25*b25)*(a25-a25)))*(((c25*(53 as int))*(c25+c25))*((b25*(49 as int))*(d25*a25))))))*d25)*((((((d25*(c25-b25))*((d25*a25)-(a25*d25)))+(((c25-b25)*(b25*b25))*((a25*b25)-d25)))-((((c25*b25)*(c25*c25))*a25)*(((d25*c25)+(d25*a25))*(a25*(a25*b25)))))*(((((a25*a25)*(c25*c25))+((d25*a25)*(c25-d25)))*(d25*(c25+(a25-b25))))-((((a25*d25)*(a25*d25))*((b25*b25)+(c25*d25)))*(((b25*a25)-(c25*c25))*b25))))*((((((a25*d25)*(b25*a25))*((a25*c25)*(b25*b25)))*(((b25*c25)*(d25*a25))*((c25*c25)*(c25+a25))))-((((b25*a25)*(a25*c25))*((c25*d25)*(c25*b25)))*((b25+(c25*a25))+((b25*b25)*(b25+c25)))))*((((c25*(b25-b25))*(d25*(a25*c25)))*(((c25-b25)*(c25*d25))*((c25*a25)*(d25*c25))))*((((b25*a25)*(b25*a25))*(b25*(d25*a25)))*(((d25*a25)*a25)*(d25+(b25*c25))))))));
	let temp_25_1 = ((((((((b25*d25)*(b25*a25))*((a25*a25)-(a25*b25)))+(((c25+d25)+c25)-((c25*b25)*(a25-d25))))*(((a25*(a25*d25))*((d25*c25)*(c25*c25)))*(((b25-a25)*(c25*b25))*((c25*a25)*c25))))*(((d25*((d25-a25)*(c25*a25)))-(c25+((b25*c25)*(b25*b25))))*(((d25*(b25*c25))*((a25*b25)*(a25-a25)))*(((c25*(53 as int))*(c25+c25))*((b25*(49 as int))*(d25*a25))))))*d25)*((((((d25*(c25-b25))*((d25*a25)-(a25*d25)))+(((c25-b25)*(b25*b25))*((a25*b25)-d25)))-((((c25*b25)*(c25*c25))*a25)*(((d25*c25)+(d25*a25))*(a25*(a25*b25)))))*(((((a25*a25)*(c25*c25))+((d25*a25)*(c25-d25)))*(d25*(c25+(a25-b25))))-((((a25*d25)*(a25*d25))*((b25*b25)+(c25*d25)))*(((b25*a25)-(c25*c25))*b25))))*(((((a25*(d25*(b25*a25)))*((a25*c25)*(b25*b25)))*(((b25*c25)*(d25*a25))*((c25*c25)*(c25+a25))))-((((b25*a25)*(a25*c25))*((c25*d25)*(c25*b25)))*((b25+(c25*a25))+((b25*b25)*(b25+c25)))))*((((c25*(b25-b25))*(d25*(a25*c25)))*(((c25-b25)*(c25*d25))*((c25*a25)*(d25*c25))))*((((b25*a25)*(b25*a25))*(b25*(d25*a25)))*(((d25*a25)*a25)*(d25+(b25*c25))))))));
	assert(temp_25_0 == temp_25_1) by 
			{lemma_mul_is_associative(a25, d25, (b25*a25));}// 1
	let temp_26_0 = (((((((d26*(d26-c26))*(a26*(a26*d26)))*(((d26*b26)*(c26*d26))*((b26*c26)*(b26*c26))))*(a26*(((d26*c26)*(c26*d26))-((c26*b26)*(a26+c26)))))*(((b26*a26)*(((a26-c26)+(b26+d26))*((b26*d26)*(b26*a26))))*((c26*((a26*b26)*((24 as int)*b26)))*(((b26+c26)*(a26*d26))*((d26*d26)*(c26+d26))))))*((((((b26*b26)*(c26-b26))*((b26*d26)*(d26*b26)))*((((26 as int)*a26)*c26)+((b26*a26)*(a26*b26))))*(d26*(c26*((a26*c26)*(c26*d26)))))+(((((a26*(54 as int))*(a26+a26))*a26)*(((c26*d26)+a26)*a26))*((((c26*b26)*(b26*b26))*((a26*a26)+a26))*(((b26*a26)*(d26*(84 as int)))*d26)))))+(((((d26*((b26*b26)*d26))*(((d26*c26)*(a26*c26))+((d26*a26)+(a26*a26))))+a26)*(((((d26+a26)*((46 as int)*a26))-((b26+c26)*(b26*b26)))*(((c26*d26)*(c26*d26))*((b26*b26)*b26)))+((a26*(c26*(d26*c26)))+(((b26*c26)+(d26*d26))*d26))))-c26));
	let temp_26_1 = (((((((d26*(d26-c26))*(a26*(a26*d26)))*(((d26*b26)*(c26*d26))*((b26*c26)*(b26*c26))))*(a26*(((d26*c26)*(c26*d26))-((c26*b26)*(a26+c26)))))*(((b26*a26)*(((a26-c26)+(b26+d26))*((b26*d26)*(b26*a26))))*((c26*((a26*b26)*((24 as int)*b26)))*(((b26+c26)*(a26*d26))*((d26*d26)*(c26+d26))))))*(((d26*(c26*((a26*c26)*(c26*d26))))*((((b26*b26)*(c26-b26))*((b26*d26)*(d26*b26)))*((((26 as int)*a26)*c26)+((b26*a26)*(a26*b26)))))+(((((a26*(54 as int))*(a26+a26))*a26)*(((c26*d26)+a26)*a26))*((((c26*b26)*(b26*b26))*((a26*a26)+a26))*(((b26*a26)*(d26*(84 as int)))*d26)))))+(((((d26*((b26*b26)*d26))*(((d26*c26)*(a26*c26))+((d26*a26)+(a26*a26))))+a26)*(((((d26+a26)*((46 as int)*a26))-((b26+c26)*(b26*b26)))*(((c26*d26)*(c26*d26))*((b26*b26)*b26)))+((a26*(c26*(d26*c26)))+(((b26*c26)+(d26*d26))*d26))))-c26));
	assert(temp_26_0 == temp_26_1) by 
			{lemma_mul_is_commutative(((((b26*b26)*(c26-b26))*((b26*d26)*(d26*b26)))*((((26 as int)*a26)*c26)+((b26*a26)*(a26*b26)))), (d26*(c26*((a26*c26)*(c26*d26)))));}// 1
	let temp_27_0 = (((((d27*(((c27+d27)*(a27-b27))*c27))*((((d27*d27)*(b27*c27))*((b27*c27)*(d27*(76 as int))))*b27))+(a27-(((c27-(b27+(27 as int)))*((b27*d27)*(d27*d27)))*(((c27*a27)*(a27*d27))*(c27*(a27*c27))))))*((((((a27*(53 as int))-(a27*c27))*((b27*c27)*b27))*(((a27*d27)*(d27*c27))*((d27*a27)*(a27*b27))))+(((a27*(a27*d27))*(a27-(b27-b27)))-b27))*(((((a27-b27)*(c27*d27))*((c27*c27)*b27))*c27)*((((d27*c27)*(b27*a27))*((a27*b27)*(c27*d27)))*(((b27*(36 as int))*(a27*c27))*((a27*d27)*(b27*a27)))))))*(((((((b27*c27)*(c27*b27))*a27)*(d27-((a27*c27)*(c27*c27))))*(((77 as int)*((b27*a27)*a27))*(((c27*c27)*(c27*a27))*((b27*d27)*(b27*b27)))))*(((((b27-d27)*(d27*d27))-((c27*d27)*(d27*c27)))*(((d27*b27)*(d27*a27))*(d27-(c27*b27))))*((((c27*d27)*((47 as int)-b27))*(c27*(b27*c27)))*(((a27*d27)*(d27*a27))*((d27*b27)*(c27*d27))))))+((((((d27*a27)-(d27*b27))*(((1 as int)*c27)*(c27*d27)))-((c27-b27)+((a27+c27)*(d27*a27))))*(((b27-(b27*c27))*((b27*d27)*(b27+c27)))*(((b27+a27)*(a27*a27))+((b27+a27)+(c27*a27)))))*(((((a27*a27)*b27)*((b27-c27)-(c27*d27)))+(d27*((b27*b27)*(b27*c27))))*d27))));
	let temp_27_1 = (((((d27*(((c27+d27)*(a27-b27))*c27))*((((d27*d27)*(b27*c27))*((b27*c27)*(d27*(76 as int))))*b27))+(a27-(((c27-(b27+(27 as int)))*((b27*d27)*(d27*d27)))*(((c27*a27)*(a27*d27))*(c27*(a27*c27))))))*((((((a27*(53 as int))-(a27*c27))*((b27*c27)*b27))*(((a27*d27)*(d27*c27))*(d27*(a27*(a27*b27)))))+(((a27*(a27*d27))*(a27-(b27-b27)))-b27))*(((((a27-b27)*(c27*d27))*((c27*c27)*b27))*c27)*((((d27*c27)*(b27*a27))*((a27*b27)*(c27*d27)))*(((b27*(36 as int))*(a27*c27))*((a27*d27)*(b27*a27)))))))*(((((((b27*c27)*(c27*b27))*a27)*(d27-((a27*c27)*(c27*c27))))*(((77 as int)*((b27*a27)*a27))*(((c27*c27)*(c27*a27))*((b27*d27)*(b27*b27)))))*(((((b27-d27)*(d27*d27))-((c27*d27)*(d27*c27)))*(((d27*b27)*(d27*a27))*(d27-(c27*b27))))*((((c27*d27)*((47 as int)-b27))*(c27*(b27*c27)))*(((a27*d27)*(d27*a27))*((d27*b27)*(c27*d27))))))+((((((d27*a27)-(d27*b27))*(((1 as int)*c27)*(c27*d27)))-((c27-b27)+((a27+c27)*(d27*a27))))*(((b27-(b27*c27))*((b27*d27)*(b27+c27)))*(((b27+a27)*(a27*a27))+((b27+a27)+(c27*a27)))))*(((((a27*a27)*b27)*((b27-c27)-(c27*d27)))+(d27*((b27*b27)*(b27*c27))))*d27))));
	assert(temp_27_0 == temp_27_1) by 
			{lemma_mul_is_associative(d27, a27, (a27*b27));}// 1
	let temp_28_0 = (b28*(((((((b28*d28)*(a28*d28))*a28)*(((b28*a28)+(b28-d28))*((d28*d28)*(a28+a28))))*((((a28+c28)*(d28-d28))*((b28*b28)+(d28*d28)))+(((b28*c28)*(a28*a28))*(b28*(b28+a28)))))*(((((a28*c28)*(b28*a28))-((c28-a28)*(b28*a28)))*(((c28-d28)*(c28-b28))*((c28*a28)*(c28*c28))))*((((c28*c28)-(d28-d28))*((d28+b28)-(d28*c28)))*(((c28*b28)-(d28-b28))*((a28*a28)*(d28*a28))))))-((((((d28*a28)*d28)*((b28*a28)*(b28*a28)))*(((c28*d28)*(b28*a28))*((b28*c28)*(b28+b28))))*((((c28-b28)*(c28*a28))*((c28*c28)*(c28*d28)))*((c28*(b28*c28))*((d28+b28)*(d28*a28)))))*(((((d28*b28)+(d28*d28))*((b28-c28)*(a28*a28)))*(((a28*a28)+(d28*(2 as int)))*((d28*d28)*(c28*d28))))+((((b28*b28)-(d28+d28))*((a28*c28)*(c28*d28)))*(((b28*c28)*(d28*b28))*((d28*a28)*(a28*b28))))))));
	let temp_28_1 = (b28*(((((((b28*d28)*(a28*d28))*a28)*(((b28*a28)+(b28-d28))*((d28*d28)*(a28+a28))))*((((a28+c28)*(d28-d28))*((b28*b28)+(d28*d28)))+(((b28*c28)*(a28*a28))*(b28*(b28+a28)))))*(((((a28*c28)*(b28*a28))-((c28-a28)*(b28*a28)))*(((c28-d28)*(c28-b28))*((c28*a28)*(c28*c28))))*((((c28*c28)-(d28-d28))*((d28+b28)-(d28*c28)))*(((c28*b28)-(d28-b28))*((a28*a28)*(d28*a28))))))-(((((((d28*a28)*d28)*((b28*a28)*(b28*a28)))*(((c28*d28)*(b28*a28))*((b28*c28)*(b28+b28))))*((((c28-b28)*(c28*a28))*((c28*c28)*(c28*d28)))*((c28*(b28*c28))*((d28+b28)*(d28*a28)))))*((((d28*b28)+(d28*d28))*((b28-c28)*(a28*a28)))*(((a28*a28)+(d28*(2 as int)))*((d28*d28)*(c28*d28)))))+((((((d28*a28)*d28)*((b28*a28)*(b28*a28)))*(((c28*d28)*(b28*a28))*((b28*c28)*(b28+b28))))*((((c28-b28)*(c28*a28))*((c28*c28)*(c28*d28)))*((c28*(b28*c28))*((d28+b28)*(d28*a28)))))*((((b28*b28)-(d28+d28))*((a28*c28)*(c28*d28)))*(((b28*c28)*(d28*b28))*((d28*a28)*(a28*b28))))))));
	assert(temp_28_0 == temp_28_1) by 
			{lemma_mul_is_distributive((((((d28*a28)*d28)*((b28*a28)*(b28*a28)))*(((c28*d28)*(b28*a28))*((b28*c28)*(b28+b28))))*((((c28-b28)*(c28*a28))*((c28*c28)*(c28*d28)))*((c28*(b28*c28))*((d28+b28)*(d28*a28))))), ((((d28*b28)+(d28*d28))*((b28-c28)*(a28*a28)))*(((a28*a28)+(d28*(2 as int)))*((d28*d28)*(c28*d28)))), ((((b28*b28)-(d28+d28))*((a28*c28)*(c28*d28)))*(((b28*c28)*(d28*b28))*((d28*a28)*(a28*b28)))));}// 1
	let temp_29_0 = ((((((((b29*b29)*(b29*d29))*((d29+c29)*(d29*d29)))*(((a29+d29)*(a29-d29))*(a29*a29)))*((((c29*c29)*(d29-(34 as int)))*((a29*a29)*b29))*c29))*(((((d29*d29)*(d29*d29))*((c29+a29)*c29))*c29)*((((b29*b29)*(b29*c29))*(a29*(c29*b29)))+(a29-(b29*d29)))))*b29)*b29);
	let temp_29_1 = (((((((((b29*b29)*b29)*d29)*((d29+c29)*(d29*d29)))*(((a29+d29)*(a29-d29))*(a29*a29)))*((((c29*c29)*(d29-(34 as int)))*((a29*a29)*b29))*c29))*(((((d29*d29)*(d29*d29))*((c29+a29)*c29))*c29)*((((b29*b29)*(b29*c29))*(a29*(c29*b29)))+(a29-(b29*d29)))))*b29)*b29);
	assert(temp_29_0 == temp_29_1) by 
			{lemma_mul_is_associative((b29*b29), b29, d29);}// 1
	let temp_30_0 = ((c30*((((((b30*b30)*d30)*((b30*b30)*(a30-d30)))*(((a30*b30)*(b30+b30))*b30))*c30)*(((((a30*c30)*((11 as int)-b30))*((b30*a30)*(a30+c30)))*(((b30*a30)+(c30*c30))*((d30*c30)*(b30*(95 as int)))))*((((b30*a30)*(a30*d30))*((c30+(54 as int))*(b30*c30)))-((d30*(d30*d30))*((b30*d30)*(d30*d30)))))))*((d30-(((((a30*b30)+(d30*b30))*c30)*d30)*((b30*((d30*a30)*(c30*b30)))*((a30*(d30-b30))*((a30*a30)*a30)))))+((((((c30*c30)*(b30*a30))-((c30+a30)*(b30*a30)))-d30)+((((b30+c30)*(a30*d30))*((b30*a30)-(d30*a30)))*(((a30*a30)*(c30*b30))*((a30*d30)*(b30*c30)))))*(((b30*a30)+c30)*a30))));
	let temp_30_1 = ((c30*((((((b30*b30)*d30)*((b30*b30)*(a30-d30)))*(((a30*b30)*(b30+b30))*b30))*c30)*(((((a30*c30)*((11 as int)-b30))*((b30*a30)*(a30+c30)))*(((b30*a30)+(c30*c30))*((d30*c30)*(b30*(95 as int)))))*((((b30*a30)*(a30*d30))*((c30+(54 as int))*(b30*c30)))-((d30*(d30*d30))*((b30*d30)*(d30*d30)))))))*((d30-(((((a30*b30)+(b30*d30))*c30)*d30)*((b30*((d30*a30)*(c30*b30)))*((a30*(d30-b30))*((a30*a30)*a30)))))+((((((c30*c30)*(b30*a30))-((c30+a30)*(b30*a30)))-d30)+((((b30+c30)*(a30*d30))*((b30*a30)-(d30*a30)))*(((a30*a30)*(c30*b30))*((a30*d30)*(b30*c30)))))*(((b30*a30)+c30)*a30))));
	assert(temp_30_0 == temp_30_1) by 
			{lemma_mul_is_commutative(d30, b30);}// 1
	let temp_31_0 = ((((((((a31+c31)*d31)+((a31*c31)*(a31*d31)))-(((b31-d31)*(d31*d31))*((a31*b31)*d31)))*((((a31*d31)+(b31*c31))-(c31*(a31*b31)))*(((b31*b31)*(a31*d31))*((b31*a31)*(d31*a31)))))*(((d31*a31)*(((d31*b31)-(a31*d31))+((d31-c31)*(b31*d31))))*(((b31-a31)*((b31*d31)*(c31*a31)))*c31)))*((((((c31*b31)*(d31*b31))*((d31*a31)*(b31*b31)))*(b31*((c31*c31)*(a31+c31))))*d31)*(((((d31*d31)*(b31-a31))*((a31+c31)*(b31*b31)))*(((b31*d31)*(c31*b31))+a31))*((c31+(((29 as int)*b31)*c31))*(a31*((c31*c31)+(a31*a31)))))))*(((a31*(c31*b31))-(((((b31*d31)+(d31*a31))*b31)*(((c31*c31)*(b31+b31))*((b31*(95 as int))*d31)))*((((a31*c31)*(d31*b31))*((c31*b31)*(d31-d31)))*(((d31*c31)*(d31*d31))*((c31+d31)*b31)))))+((((c31-(c31*(a31*b31)))-(((c31*a31)+(a31*a31))*((d31*a31)*(c31*a31))))-(a31*(((c31*b31)*(c31+b31))*((d31*c31)*(c31+a31)))))+(((((a31+c31)*(c31*c31))*b31)*b31)+((((a31*d31)*(b31*c31))*d31)*((((93 as int)*a31)+(a31+d31))*((d31*c31)*(a31+d31))))))));
	let temp_31_1 = ((((((((a31+c31)*d31)+((a31*c31)*(a31*d31)))-(((b31-d31)*(d31*d31))*((a31*b31)*d31)))*((((a31*d31)+(b31*c31))-(c31*(a31*b31)))*(((b31*b31)*(a31*d31))*((b31*a31)*(d31*a31)))))*(((d31*a31)*(((d31*b31)-(a31*d31))+((d31-c31)*(b31*d31))))*(((b31-a31)*((b31*d31)*(c31*a31)))*c31)))*((((((c31*b31)*(d31*b31))*((d31*a31)*(b31*b31)))*(b31*((c31*c31)*(a31+c31))))*d31)*(((((d31*d31)*(b31-a31))*((a31+c31)*(b31*b31)))*(((b31*d31)*(c31*b31))+a31))*((c31+(((29 as int)*b31)*c31))*(a31*((c31*c31)+(a31*a31)))))))*((((a31*c31)*b31)-(((((b31*d31)+(d31*a31))*b31)*(((c31*c31)*(b31+b31))*((b31*(95 as int))*d31)))*((((a31*c31)*(d31*b31))*((c31*b31)*(d31-d31)))*(((d31*c31)*(d31*d31))*((c31+d31)*b31)))))+((((c31-(c31*(a31*b31)))-(((c31*a31)+(a31*a31))*((d31*a31)*(c31*a31))))-(a31*(((c31*b31)*(c31+b31))*((d31*c31)*(c31+a31)))))+(((((a31+c31)*(c31*c31))*b31)*b31)+((((a31*d31)*(b31*c31))*d31)*((((93 as int)*a31)+(a31+d31))*((d31*c31)*(a31+d31))))))));
	assert(temp_31_0 == temp_31_1) by 
			{lemma_mul_is_associative(a31, c31, b31);}// 1
	let temp_32_0 = ((((((((c32+d32)*(a32-a32))*b32)*(((a32*a32)*(d32*c32))-((b32*(14 as int))*(c32*d32))))*((((c32+c32)*(d32*c32))*((b32*c32)*((64 as int)*a32)))*(((a32*(87 as int))+(c32*b32))*((b32*d32)*(d32+a32)))))*(((a32-((a32*c32)*c32))*(((d32*a32)*(d32*c32))*((c32*c32)+(d32*a32))))*(((((65 as int)*b32)*(d32*a32))+(((80 as int)*(52 as int))*(d32*b32)))*(((d32*d32)+b32)*((d32*d32)*(a32*b32))))))-((d32+((c32*((b32*b32)*(a32*b32)))*c32))*a32))*(((((((c32*b32)*(b32*c32))*((b32*b32)*(b32*d32)))+(((b32*c32)*(b32*d32))-((a32*d32)*a32)))*((((c32*a32)*(b32*a32))*(d32*d32))*(((c32*a32)+c32)+(d32*(d32*a32)))))*(((c32*(a32*c32))*(((c32*a32)*(b32*d32))*((d32*b32)*(d32+b32))))*((((b32*c32)*(c32*d32))*((d32*d32)+(a32*c32)))+(((c32*a32)*(d32*c32))*((c32*d32)*(b32*a32))))))*(((d32*(((a32*d32)*(d32+(16 as int)))*(b32-(c32*b32))))*((d32*(c32*(c32+a32)))*c32))*(((((b32*d32)*(b32*b32))*((c32*d32)*(a32*b32)))*(((c32*c32)*((83 as int)*b32))*(b32*(b32*c32))))*((((b32*d32)*(b32*a32))*((a32*d32)*b32))*(((a32*d32)*c32)*(d32*(a32*a32))))))));
	let temp_32_1 = ((((((((c32+d32)*(a32-a32))*b32)*(((a32*a32)*(d32*c32))-((b32*(14 as int))*(c32*d32))))*((((c32+c32)*(d32*c32))*((b32*c32)*((64 as int)*a32)))*(((a32*(87 as int))+(c32*b32))*((b32*d32)*(d32+a32)))))*(((a32-((a32*c32)*c32))*(((d32*a32)*(d32*c32))*((c32*c32)+(d32*a32))))*(((((65 as int)*b32)*(d32*a32))+(((80 as int)*(52 as int))*(d32*b32)))*(((d32*d32)+b32)*((d32*d32)*(a32*b32))))))-((d32+((c32*((b32*b32)*(a32*b32)))*c32))*a32))*(((((((c32*b32)*(b32*c32))*((b32*b32)*(b32*d32)))+(((b32*c32)*(b32*d32))-((a32*d32)*a32)))*((((c32*a32)*(b32*a32))*(d32*d32))*(((c32*a32)+c32)+(d32*(d32*a32)))))*(((c32*(a32*c32))*(((c32*a32)*(b32*d32))*((d32*b32)*(d32+b32))))*((((b32*c32)*(c32*d32))*((d32*d32)+(a32*c32)))+(((c32*a32)*(d32*c32))*((c32*d32)*(b32*a32))))))*(((d32*(((d32+(16 as int))*(a32*d32))*(b32-(c32*b32))))*((d32*(c32*(c32+a32)))*c32))*(((((b32*d32)*(b32*b32))*((c32*d32)*(a32*b32)))*(((c32*c32)*((83 as int)*b32))*(b32*(b32*c32))))*((((b32*d32)*(b32*a32))*((a32*d32)*b32))*(((a32*d32)*c32)*(d32*(a32*a32))))))));
	assert(temp_32_0 == temp_32_1) by 
			{lemma_mul_is_commutative((a32*d32), (d32+(16 as int)));}// 1

}

} // verus!