use builtin_macros::*;
use builtin::*;
mod nl_basics;
use crate::nl_basics::*;
verus! {

pub proof fn nlarith_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int) by (nonlinear_arith)
{
	let temp_0_0 = (((((a0*(d0*a0))*(b0*(b0*d0)))-(d0*(((18 as int)-b0)*b0)))*((((b0*c0)*c0)*(b0*(b0*b0)))*((d0*(c0*a0))*((c0-c0)*(b0-a0)))))*(((((b0-b0)*(b0*d0))*((b0-b0)*(b0+a0)))*(((d0*c0)*(c0*c0))*((a0*b0)*a0)))*(((d0*(a0*a0))*(b0*(c0*d0)))*b0)));
	let temp_0_1 = (((((a0*(d0*a0))*(b0*(b0*d0)))-(d0*(((18 as int)-b0)*b0)))*((((b0*c0)*c0)*(b0*(b0*b0)))*((d0*(c0*a0))*((c0-c0)*(b0-a0)))))*(((((b0-b0)*(b0*d0))*((b0-b0)*(b0+a0)))*(((a0*b0)*a0)*((d0*c0)*(c0*c0))))*(((d0*(a0*a0))*(b0*(c0*d0)))*b0)));
	assert(temp_0_0 == temp_0_1);
	let temp_1_0 = ((((((a1*d1)*(b1*c1))+((a1*b1)*(d1*d1)))*(c1+((b1*d1)*d1)))*((((a1*d1)*(b1*d1))*((d1-d1)*(c1*b1)))*(((b1*b1)*(c1*c1))*((c1-b1)*(c1*b1)))))*(((b1*((c1*a1)*(b1*c1)))*((d1*(c1-b1))*((b1*a1)-(d1*b1))))*((((c1*b1)*(c1*d1))*((d1*b1)+((0 as int)*a1)))*((b1*(b1*a1))*((a1*a1)*c1)))));
	let temp_1_1 = ((((((a1*d1)*(b1*c1))+((a1*b1)*(d1*d1)))*(c1+((b1*d1)*d1)))*((((a1*d1)*(b1*d1))*((d1-d1)*(c1*b1)))*(((b1*b1)*(c1*c1))*((c1-b1)*(b1*c1)))))*(((b1*((c1*a1)*(b1*c1)))*((d1*(c1-b1))*((b1*a1)-(d1*b1))))*((((c1*b1)*(c1*d1))*((d1*b1)+((0 as int)*a1)))*((b1*(b1*a1))*((a1*a1)*c1)))));
	assert(temp_1_0 == temp_1_1);
	let temp_2_0 = ((((((c2+b2)*(a2*a2))*((a2*b2)+(a2*c2)))*(((a2*c2)*(b2*a2))*((b2*c2)-(d2*b2))))*((((d2*b2)-(a2*a2))*(c2*(b2*b2)))+(((b2*a2)*(b2*a2))+((a2*d2)*(a2+c2)))))-((c2-(((b2*b2)*(a2*b2))*((c2*b2)*(a2*d2))))*(d2*(((d2+a2)*(a2*b2))*((b2+c2)-(a2*c2))))));
	let temp_2_1 = ((((((c2+b2)*(a2*a2))*((a2*b2)+(a2*c2)))*(((a2*c2)*(b2*a2))*((b2*c2)-(d2*b2))))*((((d2*b2)-(a2*a2))*(c2*(b2*b2)))+(((b2*a2)*(b2*a2))+((a2*d2)*(a2+c2)))))-((c2-(((b2*b2)*(a2*b2))*((c2*b2)*(a2*d2))))*(d2*(((d2*(a2*b2))+(a2*(a2*b2)))*((b2+c2)-(a2*c2))))));
	assert(temp_2_0 == temp_2_1);

}

} // verus!