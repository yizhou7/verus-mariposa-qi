include "nl_basics.dfy"

import opened nl_basics
lemma free_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int,
a10: int, b10: int, c10: int, d10: int,
a11: int, b11: int, c11: int, d11: int,
a12: int, b12: int, c12: int, d12: int,
a13: int, b13: int, c13: int, d13: int,
a14: int, b14: int, c14: int, d14: int,
a15: int, b15: int, c15: int, d15: int,
a16: int, b16: int, c16: int, d16: int,
a17: int, b17: int, c17: int, d17: int,
a18: int, b18: int, c18: int, d18: int,
a19: int, b19: int, c19: int, d19: int)
{
	lemma_mul_properties_auto_1();
	var temp_0_0 := ((d0*c0)+(a0*b0));
	var temp_0_1 := ((d0*c0)+(b0*a0));
	assert(temp_0_0 == temp_0_1);
	var temp_1_0 := ((c1*d1)*(d1+a1));
	var temp_1_1 := ((d1*c1)*(d1+a1));
	assert(temp_1_0 == temp_1_1);
	var temp_2_0 := ((b2*a2)*(a2-a2));
	var temp_2_1 := ((a2*b2)*(a2-a2));
	assert(temp_2_0 == temp_2_1);
	var temp_3_0 := ((a3*c3)+(c3*d3));
	var temp_3_1 := ((c3*a3)+(c3*d3));
	assert(temp_3_0 == temp_3_1);
	var temp_4_0 := ((a4*d4)*(a4*a4));
	var temp_4_1 := ((d4*a4)*(a4*a4));
	assert(temp_4_0 == temp_4_1);
	var temp_5_0 := ((a5*c5)-(d5*c5));
	var temp_5_1 := ((a5*c5)-(c5*d5));
	assert(temp_5_0 == temp_5_1);
	var temp_6_0 := ((b6*c6)*(d6*(99 as int)));
	var temp_6_1 := ((d6*(99 as int))*(b6*c6));
	assert(temp_6_0 == temp_6_1);
	var temp_7_0 := ((c7*a7)+(b7*c7));
	var temp_7_1 := ((c7*a7)+(c7*b7));
	assert(temp_7_0 == temp_7_1);
	var temp_8_0 := (((50 as int)*d8)*(a8*d8));
	var temp_8_1 := ((d8*(50 as int))*(a8*d8));
	assert(temp_8_0 == temp_8_1);

}
