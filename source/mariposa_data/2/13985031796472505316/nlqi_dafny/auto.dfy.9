include "nl_basics.dfy"

import opened nl_basics
lemma auto_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int)
{
	var temp_0_0 := ((c0*b0)*(a0*c0));
	var temp_0_1 := ((a0*c0)*(c0*b0));
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_1_0 := ((b1*c1)*((83 as int)-a1));
	var temp_1_1 := (((83 as int)-a1)*(b1*c1));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_2_0 := ((c2*d2)-(a2*c2));
	var temp_2_1 := ((c2*d2)-(c2*a2));
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_3_0 := ((c3*d3)*(b3*a3));
	var temp_3_1 := (c3*(d3*(b3*a3)));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_4_0 := ((a4*b4)*(d4-d4));
	var temp_4_1 := (((a4*b4)*d4)-((a4*b4)*d4));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_5_0 := ((c5*a5)+(a5-c5));
	var temp_5_1 := ((a5*c5)+(a5-c5));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_6_0 := ((d6*d6)-(b6+d6));
	var temp_6_1 := ((d6*d6)-(b6+d6));
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_7_0 := ((c7-d7)*(d7*c7));
	var temp_7_1 := ((d7*c7)*(c7-d7));
	assert(temp_7_0 == temp_7_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_8_0 := ((b8*c8)*(d8*(22 as int)));
	var temp_8_1 := ((b8*c8)*((22 as int)*d8));
	assert(temp_8_0 == temp_8_1) by 
			{lemma_mul_properties_auto_1();}// 1

}
