include "nl_basics.dfy"

import opened nl_basics
lemma auto_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int)
{
	var temp_0_0 := ((d0+a0)*(c0+a0));
	var temp_0_1 := ((c0+a0)*(d0+a0));
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_1_0 := ((b1*b1)*(b1*b1));
	var temp_1_1 := ((b1*b1)*(b1*b1));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_2_0 := (a2*(b2*(88 as int)));
	var temp_2_1 := ((a2*b2)*(88 as int));
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_3_0 := ((c3*a3)*(d3-b3));
	var temp_3_1 := (((c3*a3)*d3)-((c3*a3)*b3));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_4_0 := ((d4*c4)*(c4+b4));
	var temp_4_1 := (((d4*c4)*c4)+((d4*c4)*b4));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_5_0 := ((d5+c5)*(b5*a5));
	var temp_5_1 := ((b5*a5)*(d5+c5));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_6_0 := ((c6*a6)*(b6*a6));
	var temp_6_1 := (c6*(a6*(b6*a6)));
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_7_0 := ((d7*d7)+(d7*d7));
	var temp_7_1 := ((d7+d7)*d7);
	assert(temp_7_0 == temp_7_1) by 
			{lemma_mul_properties_auto_1();}// 1
	var temp_8_0 := ((d8*b8)*(d8*c8));
	var temp_8_1 := ((b8*d8)*(d8*c8));
	assert(temp_8_0 == temp_8_1) by 
			{lemma_mul_properties_auto_1();}// 1

}
