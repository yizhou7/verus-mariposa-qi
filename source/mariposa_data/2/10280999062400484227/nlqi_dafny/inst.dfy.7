include "nl_basics.dfy"

import opened nl_basics
lemma inst_0(a0: int, b0: int, c0: int, d0: int,
a1: int, b1: int, c1: int, d1: int,
a2: int, b2: int, c2: int, d2: int,
a3: int, b3: int, c3: int, d3: int,
a4: int, b4: int, c4: int, d4: int,
a5: int, b5: int, c5: int, d5: int,
a6: int, b6: int, c6: int, d6: int,
a7: int, b7: int, c7: int, d7: int,
a8: int, b8: int, c8: int, d8: int,
a9: int, b9: int, c9: int, d9: int)
{
	var temp_0_0 := ((d0-b0)*(c0*b0));
	var temp_0_1 := (((d0-b0)*c0)*b0);
	assert(temp_0_0 == temp_0_1) by 
			{lemma_mul_is_associative((d0-b0), c0, b0);}// 1
	var temp_1_0 := ((a1*a1)*(b1*(89 as int)));
	var temp_1_1 := ((b1*(89 as int))*(a1*a1));
	assert(temp_1_0 == temp_1_1) by 
			{lemma_mul_is_commutative((a1*a1), (b1*(89 as int)));}// 1
	var temp_2_0 := (a2*(b2*d2));
	var temp_2_1 := ((a2*b2)*d2);
	assert(temp_2_0 == temp_2_1) by 
			{lemma_mul_is_associative(a2, b2, d2);}// 1
	var temp_3_0 := ((c3*d3)-(c3*b3));
	var temp_3_1 := ((c3*d3)-(b3*c3));
	assert(temp_3_0 == temp_3_1) by 
			{lemma_mul_is_commutative(c3, b3);}// 1
	var temp_4_0 := ((a4-a4)*(b4*b4));
	var temp_4_1 := ((a4*(b4*b4))-(a4*(b4*b4)));
	assert(temp_4_0 == temp_4_1) by 
			{lemma_mul_is_distributive(a4, a4, (b4*b4));}// 1
	var temp_5_0 := ((a5*b5)-(b5*d5));
	var temp_5_1 := ((b5*a5)-(b5*d5));
	assert(temp_5_0 == temp_5_1) by 
			{lemma_mul_is_commutative(a5, b5);}// 1
	var temp_6_0 := ((a6+b6)*(d6*d6));
	var temp_6_1 := (((a6+b6)*d6)*d6);
	assert(temp_6_0 == temp_6_1) by 
			{lemma_mul_is_associative((a6+b6), d6, d6);}// 1

}
