note: verifying root module

assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_0 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:27:3: 27:34 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:26:2: 27:34 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_1 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:29:3: 29:34 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:28:2: 29:34 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_2 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:31:3: 31:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:30:2: 31:56 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_3 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:33:3: 33:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:32:2: 33:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_4 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:35:3: 35:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:34:2: 35:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_5 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:37:3: 37:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:36:2: 37:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_6 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:39:3: 39:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:38:2: 39:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_7 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:41:3: 41:89 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:40:2: 41:89 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_8 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:43:3: 43:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:42:2: 43:78 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_9 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:45:3: 45:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:44:2: 45:78 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_10 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:47:3: 47:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:46:2: 47:56 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_11 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:49:3: 49:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:48:2: 49:56 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_12 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:51:3: 51:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:50:2: 51:56 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_13 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:53:3: 53:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:52:2: 53:78 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_14 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:55:3: 55:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:54:2: 55:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_15 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:57:3: 57:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:56:2: 57:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_16 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:59:3: 59:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:58:2: 59:78 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_17 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:61:3: 61:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:60:2: 61:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_18 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:63:3: 63:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:62:2: 63:67 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_19 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:65:3: 65:12 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:64:2: 65:12 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_20 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:67:3: 67:30 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:66:2: 67:30 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_21 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:69:3: 69:43 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:68:2: 69:43 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_22 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:71:3: 71:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:70:2: 71:69 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_23 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:73:3: 73:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:72:2: 73:69 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_24 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:75:3: 75:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:74:2: 75:69 (#0)
assigning QID user_main__nl_basics__lemma_mul_properties_auto_1_25 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:77:3: 77:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:76:2: 77:69 (#0)
assigning QID inst_main__free_0_26 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:27:3: 27:34 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:26:2: 27:34 (#0)
assigning QID inst_main__free_0_27 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:29:3: 29:34 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:28:2: 29:34 (#0)
assigning QID inst_main__free_0_28 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:31:3: 31:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:30:2: 31:56 (#0)
assigning QID inst_main__free_0_29 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:33:3: 33:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:32:2: 33:67 (#0)
assigning QID inst_main__free_0_30 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:35:3: 35:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:34:2: 35:67 (#0)
assigning QID inst_main__free_0_31 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:37:3: 37:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:36:2: 37:67 (#0)
assigning QID inst_main__free_0_32 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:39:3: 39:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:38:2: 39:67 (#0)
assigning QID inst_main__free_0_33 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:41:3: 41:89 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:40:2: 41:89 (#0)
assigning QID inst_main__free_0_34 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:43:3: 43:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:42:2: 43:78 (#0)
assigning QID inst_main__free_0_35 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:45:3: 45:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:44:2: 45:78 (#0)
assigning QID inst_main__free_0_36 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:47:3: 47:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:46:2: 47:56 (#0)
assigning QID inst_main__free_0_37 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:49:3: 49:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:48:2: 49:56 (#0)
assigning QID inst_main__free_0_38 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:51:3: 51:56 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:50:2: 51:56 (#0)
assigning QID inst_main__free_0_39 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:53:3: 53:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:52:2: 53:78 (#0)
assigning QID inst_main__free_0_40 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:55:3: 55:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:54:2: 55:67 (#0)
assigning QID inst_main__free_0_41 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:57:3: 57:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:56:2: 57:67 (#0)
assigning QID inst_main__free_0_42 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:59:3: 59:78 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:58:2: 59:78 (#0)
assigning QID inst_main__free_0_43 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:61:3: 61:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:60:2: 61:67 (#0)
assigning QID inst_main__free_0_44 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:63:3: 63:67 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:62:2: 63:67 (#0)
assigning QID inst_main__free_0_45 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:65:3: 65:12 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:64:2: 65:12 (#0)
assigning QID inst_main__free_0_46 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:67:3: 67:30 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:66:2: 67:30 (#0)
assigning QID inst_main__free_0_47 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:69:3: 69:43 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:68:2: 69:43 (#0)
assigning QID inst_main__free_0_48 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:71:3: 71:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:70:2: 71:69 (#0)
assigning QID inst_main__free_0_49 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:73:3: 73:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:72:2: 73:69 (#0)
assigning QID inst_main__free_0_50 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:75:3: 75:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:74:2: 75:69 (#0)
assigning QID inst_main__free_0_51 to mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:77:3: 77:69 (#0) used at mariposa_data/uf/2890914115091517311/nlqi_verus/src/nl_basics.rs:76:2: 77:69 (#0)

main query finished
parsing prover trace for function PathX { krate: Some("main"), segments: ["free_0"] }
used quantifier Assume(Bind(Quant(Forall, ["x~14$" -> Named("Poly"), "y~16$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Var("x~14$"), Var("y~16$")])], [Apply("main!nl_basics.add_.?", [Var("y~16$"), Var("x~14$")])]], Some("inst_main__free_0_26")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~14$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~16$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~14$"), Var("y~16$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("y~16$"), Var("x~14$")])])])))), qid "inst_main__free_0_26"
used quantifier Assume(Bind(Quant(Forall, ["x~45$" -> Named("Poly"), "y~47$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Var("x~45$"), Var("y~47$")])], [Apply("main!nl_basics.mul_.?", [Var("y~47$"), Var("x~45$")])]], Some("inst_main__free_0_27")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~45$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~47$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~45$"), Var("y~47$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~47$"), Var("x~45$")])])])))), qid "inst_main__free_0_27"
used quantifier Assume(Bind(Quant(Forall, ["x~76$" -> Named("Poly"), "y~78$" -> Named("Poly"), "z~80$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Var("x~76$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~78$"), Var("z~80$")])])])], [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~76$"), Var("y~78$")])]), Var("z~80$")])]], Some("inst_main__free_0_28")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~76$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~78$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~80$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~76$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~78$"), Var("z~80$")])])])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~76$"), Var("y~78$")])]), Var("z~80$")])])])))), qid "inst_main__free_0_28"
used quantifier Assume(Bind(Quant(Forall, ["x~121$" -> Named("Poly"), "y~123$" -> Named("Poly"), "z~125$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Var("x~121$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("y~123$"), Var("z~125$")])])])]], Some("inst_main__free_0_29")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~121$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~123$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~125$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~121$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("y~123$"), Var("z~125$")])])])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~121$"), Var("y~123$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~121$"), Var("z~125$")])])])])])))), qid "inst_main__free_0_29"
used quantifier Assume(Bind(Quant(Forall, ["x~171$" -> Named("Poly"), "y~173$" -> Named("Poly"), "z~175$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~171$"), Var("y~173$")])]), Var("z~175$")])]], Some("inst_main__free_0_30")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~171$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~173$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~175$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~171$"), Var("y~173$")])]), Var("z~175$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~171$"), Var("z~175$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~173$"), Var("z~175$")])])])])])))), qid "inst_main__free_0_30"
unused quantifier Assume(Bind(Quant(Forall, ["x~221$" -> Named("Poly"), "y~223$" -> Named("Poly"), "z~225$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("y~223$"), Var("z~225$")])]), Var("x~221$")])]], Some("inst_main__free_0_31")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~221$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~223$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~225$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("y~223$"), Var("z~225$")])]), Var("x~221$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~223$"), Var("x~221$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("z~225$"), Var("x~221$")])])])])])))), qid "inst_main__free_0_31"
unused quantifier Assume(Bind(Quant(Forall, ["x~271$" -> Named("Poly"), "y~273$" -> Named("Poly"), "z~275$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~271$"), Var("y~273$")])]), Var("z~275$")])]], Some("inst_main__free_0_32")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~271$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~273$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~275$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~271$"), Var("y~273$")])]), Var("z~275$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~271$"), Var("z~275$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~273$"), Var("z~275$")])])])])])))), qid "inst_main__free_0_32"
used quantifier Assume(Bind(Quant(Forall, ["x~321$" -> Named("Poly"), "y~323$" -> Named("Poly"), "m~325$" -> Named("Poly")], [[Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~321$"), Var("y~323$")])]), Var("m~325$")])]), Var("m~325$")])], [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~321$"), Var("m~325$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~323$"), Var("m~325$")])])])]], Some("inst_main__free_0_33")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~321$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~323$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~325$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~321$"), Var("y~323$")])]), Var("m~325$")])]), Var("m~325$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~321$"), Var("m~325$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~323$"), Var("m~325$")])])])]), Var("m~325$")])])])))), qid "inst_main__free_0_33"
used quantifier Assume(Bind(Quant(Forall, ["x~381$" -> Named("Poly"), "y~383$" -> Named("Poly"), "m~385$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Var("x~381$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~383$"), Var("m~385$")])])])]], Some("inst_main__free_0_34")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~381$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~383$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~385$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~381$"), Var("y~383$")])]), Var("m~385$")])]), Var("m~385$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~381$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~383$"), Var("m~385$")])])])]), Var("m~385$")])])])))), qid "inst_main__free_0_34"
used quantifier Assume(Bind(Quant(Forall, ["x~436$" -> Named("Poly"), "y~438$" -> Named("Poly"), "m~440$" -> Named("Poly")], [[Apply("main!nl_basics.mul_.?", [Var("y~438$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~436$"), Var("m~440$")])])])]], Some("inst_main__free_0_35")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~436$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~438$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~440$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x~436$"), Var("y~438$")])]), Var("m~440$")])]), Var("m~440$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~438$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~436$"), Var("m~440$")])])])]), Var("m~440$")])])])))), qid "inst_main__free_0_35"
used quantifier Assume(Bind(Quant(Forall, ["x~491$" -> Named("Poly"), "y~493$" -> Named("Poly"), "m~495$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Var("x~491$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~493$"), Var("m~495$")])])])]], Some("inst_main__free_0_36")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~491$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~493$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~495$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~491$"), Var("m~495$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~491$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~493$"), Var("m~495$")])])])]), Var("m~495$")])])])))), qid "inst_main__free_0_36"
used quantifier Assume(Bind(Quant(Forall, ["x~536$" -> Named("Poly"), "y~538$" -> Named("Poly"), "m~540$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~538$"), Var("m~540$")])]), Var("x~536$")])]], Some("inst_main__free_0_37")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~536$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~538$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~540$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~536$"), Var("m~540$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~538$"), Var("m~540$")])]), Var("x~536$")])]), Var("m~540$")])])])))), qid "inst_main__free_0_37"
unused quantifier Assume(Bind(Quant(Forall, ["x~581$" -> Named("Poly"), "y~583$" -> Named("Poly"), "m~585$" -> Named("Poly")], [[Apply("main!nl_basics.sub_.?", [Var("x~581$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~583$"), Var("m~585$")])])])]], Some("inst_main__free_0_38")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~581$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~583$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~585$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~581$"), Var("m~585$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~581$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("y~583$"), Var("m~585$")])])])]), Var("m~585$")])])])))), qid "inst_main__free_0_38"
used quantifier Assume(Bind(Quant(Forall, ["x~626$" -> Named("Poly"), "y~628$" -> Named("Poly"), "m~630$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~626$"), Var("m~630$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~628$"), Var("m~630$")])])])]], Some("inst_main__free_0_39")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~626$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~628$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~630$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~626$"), Var("y~628$")])]), Var("m~630$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~626$"), Var("m~630$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~628$"), Var("m~630$")])])])]), Var("m~630$")])])])))), qid "inst_main__free_0_39"
used quantifier Assume(Bind(Quant(Forall, ["x~681$" -> Named("Poly"), "y~683$" -> Named("Poly"), "m~685$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Var("x~681$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~683$"), Var("m~685$")])])])]], Some("inst_main__free_0_40")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~681$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~683$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~685$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~681$"), Var("y~683$")])]), Var("m~685$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~681$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~683$"), Var("m~685$")])])])]), Var("m~685$")])])])))), qid "inst_main__free_0_40"
used quantifier Assume(Bind(Quant(Forall, ["x~731$" -> Named("Poly"), "y~733$" -> Named("Poly"), "m~735$" -> Named("Poly")], [[Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~731$"), Var("m~735$")])]), Var("y~733$")])]], Some("inst_main__free_0_41")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~731$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~733$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~735$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x~731$"), Var("y~733$")])]), Var("m~735$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~731$"), Var("m~735$")])]), Var("y~733$")])]), Var("m~735$")])])])))), qid "inst_main__free_0_41"
unused quantifier Assume(Bind(Quant(Forall, ["x~781$" -> Named("Poly"), "y~783$" -> Named("Poly"), "m~785$" -> Named("Poly")], [[Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~781$"), Var("m~785$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~783$"), Var("m~785$")])])])]], Some("inst_main__free_0_42")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~781$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~783$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~785$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~781$"), Var("y~783$")])]), Var("m~785$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~781$"), Var("m~785$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~783$"), Var("m~785$")])])])]), Var("m~785$")])])])))), qid "inst_main__free_0_42"
unused quantifier Assume(Bind(Quant(Forall, ["x~836$" -> Named("Poly"), "y~838$" -> Named("Poly"), "m~840$" -> Named("Poly")], [[Apply("main!nl_basics.sub_.?", [Var("x~836$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~838$"), Var("m~840$")])])])]], Some("inst_main__free_0_43")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~836$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~838$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~840$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~836$"), Var("y~838$")])]), Var("m~840$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~836$"), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("y~838$"), Var("m~840$")])])])]), Var("m~840$")])])])))), qid "inst_main__free_0_43"
unused quantifier Assume(Bind(Quant(Forall, ["x~886$" -> Named("Poly"), "y~888$" -> Named("Poly"), "m~890$" -> Named("Poly")], [[Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~886$"), Var("m~890$")])]), Var("y~888$")])]], Some("inst_main__free_0_44")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~886$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~888$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("m~890$"), Var("TYPE%main!nl_basics.Elem.")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x~886$"), Var("y~888$")])]), Var("m~890$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x~886$"), Var("m~890$")])]), Var("y~888$")])]), Var("m~890$")])])])))), qid "inst_main__free_0_44"
used quantifier Assume(Bind(Quant(Forall, ["x~936$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Var("x~936$"), Var("x~936$")])]], Some("inst_main__free_0_45")), Binary(Implies, Apply("has_type", [Var("x~936$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("main!nl_basics.eq_.?", [Var("x~936$"), Var("x~936$")])))), qid "inst_main__free_0_45"
used quantifier Assume(Bind(Quant(Forall, ["x~953$" -> Named("Poly"), "y~955$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Var("x~953$"), Var("y~955$")])], [Apply("main!nl_basics.eq_.?", [Var("y~955$"), Var("x~953$")])]], Some("inst_main__free_0_46")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~953$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~955$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Apply("main!nl_basics.eq_.?", [Var("x~953$"), Var("y~955$")]), Apply("main!nl_basics.eq_.?", [Var("y~955$"), Var("x~953$")]))))), qid "inst_main__free_0_46"
used quantifier Assume(Bind(Quant(Forall, ["x~986$" -> Named("Poly"), "y~988$" -> Named("Poly"), "z~990$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("y~988$")]), Apply("main!nl_basics.eq_.?", [Var("y~988$"), Var("z~990$")])], [Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("y~988$")]), Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("z~990$")])], [Apply("main!nl_basics.eq_.?", [Var("y~988$"), Var("z~990$")]), Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("z~990$")])], [Apply("main!nl_basics.eq_.?", [Var("y~988$"), Var("z~990$")]), Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("z~990$")])]], Some("inst_main__free_0_47")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x~986$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y~988$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("z~990$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Multi(And, [Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("y~988$")]), Apply("main!nl_basics.eq_.?", [Var("y~988$"), Var("z~990$")])]), Apply("main!nl_basics.eq_.?", [Var("x~986$"), Var("z~990$")]))))), qid "inst_main__free_0_47"
used quantifier Assume(Bind(Quant(Forall, ["x0~1031$" -> Named("Poly"), "y0~1033$" -> Named("Poly"), "x1~1035$" -> Named("Poly"), "y1~1037$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x0~1031$"), Var("y0~1033$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x1~1035$"), Var("y1~1037$")])])])]], Some("inst_main__free_0_48")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x0~1031$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y0~1033$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("x1~1035$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y1~1037$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Multi(And, [Apply("main!nl_basics.eq_.?", [Var("x0~1031$"), Var("x1~1035$")]), Apply("main!nl_basics.eq_.?", [Var("y0~1033$"), Var("y1~1037$")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x0~1031$"), Var("y0~1033$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.add_.?", [Var("x1~1035$"), Var("y1~1037$")])])]))))), qid "inst_main__free_0_48"
unused quantifier Assume(Bind(Quant(Forall, ["x0~1090$" -> Named("Poly"), "y0~1092$" -> Named("Poly"), "x1~1094$" -> Named("Poly"), "y1~1096$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x0~1090$"), Var("y0~1092$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x1~1094$"), Var("y1~1096$")])])])]], Some("inst_main__free_0_49")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x0~1090$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y0~1092$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("x1~1094$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y1~1096$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Multi(And, [Apply("main!nl_basics.eq_.?", [Var("x0~1090$"), Var("x1~1094$")]), Apply("main!nl_basics.eq_.?", [Var("y0~1092$"), Var("y1~1096$")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x0~1090$"), Var("y0~1092$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.sub_.?", [Var("x1~1094$"), Var("y1~1096$")])])]))))), qid "inst_main__free_0_49"
used quantifier Assume(Bind(Quant(Forall, ["x0~1149$" -> Named("Poly"), "y0~1151$" -> Named("Poly"), "x1~1153$" -> Named("Poly"), "y1~1155$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x0~1149$"), Var("y0~1151$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x1~1153$"), Var("y1~1155$")])])])]], Some("inst_main__free_0_50")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x0~1149$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y0~1151$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("x1~1153$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y1~1155$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Multi(And, [Apply("main!nl_basics.eq_.?", [Var("x0~1149$"), Var("x1~1153$")]), Apply("main!nl_basics.eq_.?", [Var("y0~1151$"), Var("y1~1155$")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x0~1149$"), Var("y0~1151$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mul_.?", [Var("x1~1153$"), Var("y1~1155$")])])]))))), qid "inst_main__free_0_50"
used quantifier Assume(Bind(Quant(Forall, ["x0~1208$" -> Named("Poly"), "y0~1210$" -> Named("Poly"), "x1~1212$" -> Named("Poly"), "y1~1214$" -> Named("Poly")], [[Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x0~1208$"), Var("y0~1210$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x1~1212$"), Var("y1~1214$")])])])]], Some("inst_main__free_0_51")), Binary(Implies, Multi(And, [Apply("has_type", [Var("x0~1208$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y0~1210$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("x1~1212$"), Var("TYPE%main!nl_basics.Elem.")]), Apply("has_type", [Var("y1~1214$"), Var("TYPE%main!nl_basics.Elem.")])]), Binary(Implies, Multi(And, [Apply("main!nl_basics.eq_.?", [Var("x0~1208$"), Var("x1~1212$")]), Apply("main!nl_basics.eq_.?", [Var("y0~1210$"), Var("y1~1214$")])]), Apply("main!nl_basics.eq_.?", [Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x0~1208$"), Var("y0~1210$")])]), Apply("Poly%main!nl_basics.Elem.", [Apply("main!nl_basics.mod_.?", [Var("x1~1212$"), Var("y1~1214$")])])]))))), qid "inst_main__free_0_51"

running instantiated commands for unsat core
error: assertion failed
  --> mariposa_data/uf/2890914115091517311/nlqi_verus/src/main.rs:12:9
   |
12 |     assert(eq_(temp_51_0, temp_51_1));
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

thread 'rustc' panicked at 'instantiated command leads to inconsistent validity results: true false', rust_verify/src/verifier.rs:1642:25
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
error: aborting due to previous error

